#ident	"@(#)bne.admin:trysystem	2.2"
#	This shell will start a uucico for the system given.
#	It produces some processing information on standard out.
#

PACKAGE="Basic Networking Utilities"
DEVICES=/usr/lib/uucp/Devices
INITTAB=/etc/inittab
PATH=:/bin:/usr/bin:/usr/lbin
POLL=/usr/lib/uucp/Poll
SYSTEMS=/usr/lib/uucp/Systems
XDIR=$MENUTOP/menu/packagemgmt/uucpmgmt
cd $XDIR


MYNAME=`uname`
TMP=/tmp/$$.UU
STATUS=/usr/spool/uucp/.Status
trap 'rm -f $TMP $STMP;exit ' 0 1 2 3 15
if [ -x ./uucico ]; then
	UUCICO=./uucico
else
	UUCICO=/usr/lib/uucp/uucico
fi
FIRST=true

flags="-qq -k$$"


if [ ! -r "$SYSTEMS" \) ]; then
	admerr $0 "Can't read '$SYSTEMS'\nCan't do trysystem operation!\n"
	exit
fi

echo "
This procedure is used to try to contact one of the system known
by $PACKAGE.
Contacting remote systems often takes a minute or more, so there
may be periods of time when there is no output to the terminal.
If you want to break out of the waiting, hit the BREAK key.
"

while $FIRST || chkyn ${flags} -f  "
Try to call another System?"  || exit
do
FIRST=false
trap 'rm -f $TMP $STMP;continue ' 2 3

	SYS=`chkyn ${flags} -ref "Enter the node name of the system you want to call:" \
	'^[0-9A-z][0-9A-z-]*$' 'Name is letters, digits, "-" character only'`


#  use 7 character maximum name length (SYSNSIZE in uucp.h) for search
SYSTEM=`echo $SYS | cut -c1-7`

#  check for existence in Systems file
#  This is a bit complicated because one has to worry about
#  names that may be prefixes of others!
XX=
XX=`uuname | grep $SYSTEM `
if [ -z "$XX" ]
then
	echo "System Name '$SYSTEM' not in Systems file"
	continue
fi
set $XX
FULLNAME=$1
for i
do
    if [ $i = $SYS ]; then
	FULLNAME=$SYS
	break
    fi
done

STMP=/tmp/$$.$FULLNAME
rm -f $STMP
> $STMP
chmod 660 $STMP
chmod 666 $STMP
#  remove old status file
rm -f $STATUS/${FULLNAME}

echo "\n\n***  Trying system: $FULLNAME ***"

$UUCICO  -r1 -s$FULLNAME  -x1 >$STMP 2>&1&
tail -f $STMP | tee /dev/tty | \
  sed -n -e '/.*Conversation/q'
continue
done
