
\S signal:  signal number:  catch \S

Signals are messages that you send to processes or processes send
to one another.  Signals are most often used to terminate processes, but
processes can catch signals.  When a process catches a signal it can ignore
it or it can execute a function.  The most common signals are interrupt,
quit, hangup, and terminate.  An interrupt signal is sent to all processes
running from your terminal when you strike the delete or break key.
Processes that are running in the background are not affected.  A quit
signal is sent to all of the processes running from your terminal when you
hold down the control key and strike the backslash key simultaneously.  A
quit signal does not affect processes that are running in the background.
You send a hangup signal when you switch your terminal off or hangup the
phone that connects you with the computer.  This signal kills all processes
running from your terminal.

You can use the kill(1) command to terminate specific processes running
from your terminal.  You can also use kill(1) in conjunction with signal
numbers to send a signal other than a terminate signal.  Signal numbers
exist for interrupt, quit, hangup, terminate and 16 other signals.  The
following is a list of the signal numbers most commonly used with kill(1).

    0  shell exit (EOF or control d)
    1  hangup (disconnect terminal from computer)
    2  interrupt (DEL key)
    3  quit (control \; causes a core dump)
    9  kill (sure kill: cannot be ignored)
   15  terminate (generated by kill(1) as the default)
