00000yacc
00702100101NAMES OF INPUT FILE:
01704100001GENERATE DEBUGGING FILE [-v] (y/n):
02706100001GENERATE "TOKEN CODE" FILE [-d] (y/n):
03708100001SUPPRESS "#line" CONSTRUCTS IN OUTPUT [-l] (y/n):
04710100001COMPILE DEBUGGING CODE [-t] (y/n):
05712100030ADDITIONS TO THE COMMAND LINE:

00010
01001
02001
03001
04001
05022



"yacc" is a utility for creating parser subroutines.  
It is primarily used in the generation of software
compilers.  "yacc" produces C source code for a parser 
subroutine; the parser subroutine is then compiled and 
finally used with a program that calls the subroutine
to parse input.  

00Enter the name of the file that contains the
grammar to be processed by "yacc."
01If you enter a "y" in this field "yacc" will
produce a file in the current directory named
"y.output."  This file contains a description
of the tables generated by "yacc" and a report
of ambiguities in the grammar.  This file is
useful for debugging your input grammar.
02If you enter a "y" for this field, "yacc" will
create a file in the current directory named 
"y.tab.h" that contains the #define statements
that associate "yacc" assigned "token codes"
with the user defined token names.  This allows
source files other than "y.tab.c" to access
the token codes.
03If you enter a "y" for this field, "yacc" will
suppress all of the #line constructs in 
"y.tab.c"  This option should only be used 
after the grammar and the associated actions
are fully debugged.
04If you enter a "y" for this field, debugging
code will automatically be compiled by "cc."
Typically the debugging code is placed in the
output file but not compiled unless the 
pre-processor symbol YYDEBUG is defined.
05ASSIST appends anything you type here to the command line.
You can use this field for "piping," "redirection," or to
execute a command in the "background."  However, since 
ASSIST does not perform any error checking on this field,
you should use it with caution.



010446n
020649n
030860n
041045n

0015
003420001010
0104yYnN
0204yYnN
0304yYnN
0404yYnN


001110
010001y-vY-vnN
020001y-dY-dnN
030001y-lY-lnN
040001y-tY-tnN
051110



