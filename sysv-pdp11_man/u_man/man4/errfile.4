'\" t
.TH ERRFILE 4
.SH NAME
errfile \- error-log file format
.SH DESCRIPTION
When hardware errors are detected by the system,
an error record is generated and passed to the
error-logging daemon for recording in the error log for
later analysis.
The default error log is
.BR /usr/adm/errfile .
.ta +5n,+\w'struct errhdr\ \ \ \ 'u,+\w'e_parreg[4];\ \ 'u,+3.6m,+3.6m
.PP
The format of an error record depends on the
type of error that was encountered.
Every record, however, has a header with the
following format:
.PP
.ne 5
.RS +5
.nf
struct errhdr {
	short	e_type;	/\(** record type \(**/
	short	e_len;	/\(** bytes in record (inc hdr) \(**/
	time_t	e_time;	/\(** time of day \(**/
};
.fi
.RE
.PP
The permissible record types are as follows:
.PP
.ne 10
.RS +5
.nf
#define \s-1E_GOTS\s+1	010	/\(** start for the \s-1UNIX\s+1 System 3.0\(**/
#define \s-1E_GORT\s+1	011	/\(** start for the \s-1UNIX/RT\s+1 System\(**/
#define \s-1E_STOP\s+1	012	/\(** stop \(**/
#define \s-1E_TCHG\s+1	013	/\(** time change \(**/
#define \s-1E_CCHG\s+1	014	/\(** configuration change \(**/
#define \s-1E_BLK\s+1	020	/\(** block device error \(**/
#define \s-1E_STRAY\s+1	030	/\(** stray interrupt \(**/
#define \s-1E_PRTY\s+1	031	/\(** memory parity \(**/
#define \s-1E_PIO\s+1	041	/\(** \s-1\&3B\*S-20 programmed \s-1I/O\s+1 \(**/
#define \s-1E_IOP\s+1	042	/\(** \s-1\&3B\*S-20 \s-1I/O\s+1 processor \(**/
.fi
.RE
.PP
Some records in the error file are of
an administrative nature.
These include the startup record that is entered into
the file when logging is activated,
the stop record that is written if the daemon is
terminated ``gracefully'',
and the time-change record that is used to account for
changes in the system's time-of-day.
These records have the following formats:
.PP
.ne 12
.RS +5
.nf
struct estart {
	short	e_cpu;	/\(** \s-1CPU\s+1 type \(**/
	struct utsname	e_name;	   /\(** system names \(**/
#ifndef u3b
	short	e_mmr3;	/\(** contents mem mgmt reg 3 \(**/
	long	e_syssize;	/\(** 11/70 system memory size \(**/
	short	e_bconf;	/\(** block dev configuration \(**/
#endif
#ifdef u3b
	int	e_mmcnt;	/\(** kbytes per array \(**/
#endif
};
.fi
.RE
.PP
.RS +5
.nf
#define eend errhdr	/\(** record header \(**/
.fi
.RE
.PP
.RS +5
.nf
struct etimchg {
	time_t	e_ntime;	/\(** new time \(**/
};
.fi
.RE
.br
.ne 10
.PP
Stray interrupts cause a record with the
following format to be logged:
.PP
.ne 4
.RS +5
.nf
struct estray {
#ifdef u3b
	uint	e_saddr;	/\(** stray loc or device addr \(**/
#else
	physadr	e_saddr;	/\(** stray loc or device addr \(**/
	short	e_sbacty;	/\(** active block devices \(**/
#endif
};
.fi
.RE
.PP
Memory subsystem error on 3B-20 and 11/70 processors cause the
following record to be generated:
.PP
.ne 6
.RS +5
.nf
struct eparity {
#ifdef u3b
	int	e_parreg[3];	/\(** 3B memory registers \(**/
#else
	short	e_parreg[4];	/\(** memory subsys registers \(**/
#endif
};
.fi
.RE
.PP
Memory subsystem errors on \s-1VAX\s+1-11/780 processors cause the
following record to be generated:
.PP
.ne 6
.RS +5
.nf
struct ememory {
	int	e_sbier;
	int	e_memcad;
};
.fi
.RE
.PP
Error records for block devices have the following format:
.PP
.RS +5
.nf
struct eblock {
.ne 19
#ifdef u3b
	ushort	e_num;	/\(** device number \(**/
	struct iostat {
	   long	io_ops;	/\(** number read/writes \(**/
	   long	io_misc;	/\(** number "other" operations \(**/
	   ushort	io_unlog;	/\(** number unlogged errors \(**/
	}	e_stats;
	short	e_bflags;	/\(** read/write, error, etc \(**/
	daddr_t	e_bnum;	/\(** logical block number \(**/
	uint	e_bytes;	/\(** number bytes to transfer \(**/
	union ptbl {
	    int page[64];	/\(** page table entries \(**/
	    union ptbl *pnext;
	}	e_ptbl;
	struct ptbl	e_ptbl;	/\(** page table for transfer \(**/
	uint	e_voff;	/\(** offset into page table \(**/
	uint	e_stat1;	/\(** status word 1 \(**/
	uint	e_stat2;	/\(** status word 2 \(**/
#endif
.br
.ne 26
#ifndef u3b
	dev_t	e_dev;	/\(** "true" major + minor dev no \(**/
	physadr	e_regloc;	/\(** controller address \(**/
	short	e_bacty;	/\(** other block \s-1I/O\s+1 activity \(**/
	struct iostat {
	   long	io_ops;	/\(** number read/writes \(**/
	   long	io_misc;	/\(** number "other" operations \(**/
	   ushort	io_unlog;	/\(** number unlogged errors \(**/
	}	e_stats;
	short	e_bflags;	/\(** read/write, error, etc \(**/
	short	e_cyloff;	/\(** logical dev start cyl \(**/
	daddr_t	e_bnum;	/\(** logical block number \(**/
	ushort	e_bytes;	/\(** number bytes to transfer \(**/
	paddr_t	e_memadd;	/\(** buffer memory address \(**/
	ushort	e_rtry;	/\(** number retries \(**/
	short	e_nreg;	/\(** number device registers \(**/
#endif
#ifdef vax
	struct mba_regs {
	   long mba_csr;
	   long mba_cr;
	   long mba_sr;
	   long mba_var;
	   long mba_vcr;
	} e_mba;
#endif
};
.fi
.RE
.PP
The following values are used in the
.I e_bflags\^
word:
.PP
.ne 6
.RS +5
.nf
#define \s-1E_WRITE\s+1	0	/\(** write operation \(**/
#define \s-1E_READ\s+1	1	/\(** read operation \(**/
#define \s-1E_NOIO\s+1	02	/\(** no \s-1I/O\s+1 pending \(**/
#define \s-1E_PHYS\s+1	04	/\(** physical \s-1I/O\s+1 \(**/
#define \s-1E_MAP\s+1	010	/\(** Unibus map in use \(**/
#define \s-1E_ERROR\s+1	020	/\(** \s-1I/O\s+1 failed \(**/
.fi
.RE
.PP
The following error records are for the
.SM 3B\*S-20
only:
.PP
.ne 6
.RS +5
.nf
struct epio {		/\(** programmed \s-1I/O\s+1 (pio) error \(**/
	char	e_chan;	/\(** which channel \(**/
	char	e_dev;	/\(** which dev on channel \(**/
	uint	e_chstat;	/\(** channel status \(**/
	uint	e_cmd;	/\(** pio command \(**/
}

.ne 5
struct eiop {		/\(** \s-1I/O\s+1 processor (iop) error \(**/
	char	e_unit;	/\(** unit number \(**/
	uint 	e_word0;	/\(** iop report word \(**/
	uint	e_word1;	/\(** iop report word \(**/
}
.fi
.RE
.br
.ne 15
.PP
The ``true'' major device numbers that identify the failing device
are as follows:
.PP
.ne 10
.RS +5
.nf
.TS
cI s cI s
l n l n .
Digital Equipment	Western Electric
#define \s-1RK\s+10	0	#define \s-1DFC\s+10	0
#define \s-1RP\s+10	1	#define \s-1IOP\s+10	1
#define \s-1RF\s+10	2	#define \s-1MT\s+10	2
#define \s-1TM\s+10	3
#define \s-1TC\s+10	4
#define \s-1HP\s+10	5
#define \s-1HT\s+10	6
#define \s-1HS\s+10	7
#define \s-1RL\s+10	8
#define \s-1HP\s+11	9
#define \s-1HP\s+12	10
#define \s-1HP\s+13	11
.TE
.fi
.RE
.SH SEE ALSO
errdemon(1M).
.\"	@(#)errfile.4	5.2 of 5/18/82
