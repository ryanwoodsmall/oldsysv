.TH QSORT 3C 
.SH NAME
qsort \- quicker sort
.SH SYNOPSIS
.B "void qsort ((char \(**) base, nel, sizeof (\(**base), compar)"
.br
.B unsigned int nel;
.br
.B int (\(**compar)( );
.SH DESCRIPTION
.I Qsort\^
is an implementation
of the quicker-sort algorithm.
It sorts a table of data in place.
.PP
.I Base\^
points to the element at the base of the table.
.I Nel\^
is the number of elements in the table.
.I Compar\^
is the name of the comparison function,
which is called with two arguments that point
to the elements being compared.
The function must return
an integer less than, equal to, or greater than zero
according as the first argument is to be considered
less than, equal to, or greater than the second.
.SH NOTES
The pointer to the base of the table should be
of type pointer-to-element,
and cast to type pointer-to-character.
.br
The comparison function need not compare every byte,
so arbitrary data may be contained in the elements in addition to the values
being compared.
.br
Although declared as type pointer-to-character,
the value returned should be cast into type pointer-to-element.
.SH SEE ALSO
sort(1), bsearch(3C), lsearch(3C), string(3C).
.\"	@(#)qsort.3c	5.2 of 5/18/82
