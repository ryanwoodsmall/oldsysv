.TH PROF 5
.SH NAME
prof \- profile within a function
.SH SYNOPSIS
.PP
.B #define \s-1MARK\s+1
.br
.B #include <prof.h>
.PP
.B void \s-1MARK\s+1 (name)
.SH DESCRIPTION
.I \s-1MARK\s+1\^
will introduce a mark called 
.I name\^
that will be treated
the same as a function entry point. 
Execution of the
mark will add to a counter for that mark, and
program-counter time spent will be accounted to the
immediately preceding mark or to the function if
there are no preceding marks within the active function.
.PP
.I Name\^
may be any combination of up to six letters, numbers or 
underscores.
Each 
.I name\^
in a single compilation must be unique, but may be the same as
any ordinary program symbol.
.PP
For marks to be effective, the symbol
\s-1MARK\s+1
must be defined before the header file 
.RI < prof.h >
is included.
This may be defined by a 
preprocessor directive as in the synopsis, or by a command
line argument,
i.e:
.br
.nf

	cc \-p \-\s-1DMARK\s+1 foo.c

.fi
If \s-1MARK\s+1
is not defined, the 
.IR \s-1MARK\s+1 (name)
statements may be left in the source files 
containing them and will be ignored.
.SH EXAMPLE
In this example, marks
can be used to determine how much time is spent in each loop.
Unless this example is compiled with 
.I \s-1MARK\s+1\^
defined on the command line, the
marks
are ignored.
.nf
.ss 18

#include <prof.h>

foo( )
{
	int i, j;

	.
	.
	.
	\s-1MARK\s+1(loop1);
	for (i = 0; i < 2000; i++) {
		. . .
	}
	\s-1MARK\s+1(loop2);
	for (j = 0; j < 2000; j++) {
		. . .
	}
}
.fi
.SH SEE ALSO
profil(2), monitor(3C).
.br
prof(1) in the
\f2\s-1UNIX\s+1 System V User Reference Manual\fR.
.\"	@(#)prof.5	6.3 of 9/6/83
