.TH FCNTL 5
.SH NAME
fcntl \- file control options
.SH SYNOPSIS
.B #include <fcntl.h>
.SH DESCRIPTION
The
.IR fcntl (2)
function provides for control over open files.
The \fIinclude\fR file describes
.I requests\^
and
.I arguments\^
to
.I fcntl\^
and
.IR open (2).
.PP
.ps 8
.vs 10
.nf
.TS
tab(:);
l s s s
l s s s
l l l l.
/\(** Flag values accessible to open(2) and fcntl(2) \(**/
/\(**  (The first three can only be set by open) \(**/
#define:O_RDONLY:0
#define:O_WRONLY:1
#define:O_RDWR:2
#define:O_NDELAY:04:/\(** Non-blocking \s-1I/O\s+1 \(**/
#define:O_APPEND:010:/\(** append (writes guaranteed at the end) \(**/
.TE
.PP
.ps 8
.vs 10
.TS
tab(:);
l s s s
l l l l.
/\(** Flag values accessible only to open(2) \(**/
#define:O_CREAT:00400:/\(** \s-1open with file create (uses third open arg)\s+1 \(**/
#define:O_TRUNC:01000:/\(** open with truncation \(**/
#define:O_EXCL:02000:/\(** exclusive open \(**/
.TE
.PP
.ps 8
.vs 10
.TS
tab(:);
l s s s
l l l l.
/\(** fcntl(2) requests \(**/
#define:F_DUPFD:0:/\(** Duplicate fildes \(**/
#define:F_GETFD:1:/\(** Get fildes flags \(**/
#define:F_SETFD:2:/\(** Set fildes flags \(**/
#define:F_GETFL:3:/\(** Get file flags \(**/
#define:F_SETFL:4:/\(** Set file flags \(**/
#define:F_GETLK:5:/\(** Get blocking file locks \(**/
#define:F_SETLK:6:/\(** Set or clear file locks and fail on busy \(**/
#define:F_SETLKW:7:/\(**Set or clear file locks and wait on busy \(**/
.TE
.PP
.TS
tab(:);
l s s s
l s s s
l l l l.
/\(** file segment locking control structure \(**/
struct flock \{
:short:l_type;
:short:l_whence;
:long:1_start;
:long:l_len;:/\(** if 0 then until EOF \(**/
:int:l_pid;:/\(** returned with F_GETLK \(**/
.TE
.PP
.TS
tab(:);
l s s s
l l l l.
/\(** file segment locking types \(**/
#define:F_RDLCK:01:/\(** Read lock \(**/
#define:F_WRLCK:02:/\(** Write lock \(**/
#define:F_UNLCK:03:/\(** Remove locks \(**/
.TE
.fi
.ps 9
.vs 11
.SH "SEE ALSO"
fcntl(2), open(2).
.\":@(#)fcntl.5:6.2 of 9/6/83
