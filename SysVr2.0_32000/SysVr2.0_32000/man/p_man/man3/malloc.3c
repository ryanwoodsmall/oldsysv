.TH MALLOC 3C 
.SH NAME
malloc, free, realloc, calloc \- main memory allocator
.SH SYNOPSIS
.nf
.B char \(**malloc (size)
.B unsigned size;
.PP
.B void free (ptr)
.B char \(**ptr;
.PP
.B char \(**realloc (ptr, size)
.B char \(**ptr;
.B unsigned size;
.PP
.B char \(**calloc (nelem, elsize)
.B unsigned nelem, elsize;
.SH DESCRIPTION
.I Malloc\^
and
.I free\^
provide a simple general-purpose memory allocation package.
.I Malloc\^
returns a pointer to a block of at least
.I size\^
bytes suitably aligned for any use.
.PP
The argument to
.I free\^
is a pointer to a block previously allocated by
.IR malloc ;
after
.I free\^
is performed this space is made available for further allocation,
but its contents are left undisturbed.
.PP
Undefined results will occur if the space
assigned by
.I malloc\^
is overrun or if some random number is handed to
.IR free .
.PP
.I Malloc\^
allocates the first big enough contiguous reach of
free space
found in a circular search from the last 
block allocated or freed,
coalescing adjacent free blocks as it searches.
It calls
.I sbrk\^
[see
.IR brk (2)]
to get more memory from the system when there is no
suitable space already free.
.PP
.I Realloc\^
changes the size of the block pointed to by
.I ptr\^
to
.I size\^
bytes and returns a pointer to the (possibly moved)
block.
The contents will be unchanged up to the
lesser of the new and old sizes.
If no free block of
.I size\^
bytes is available in the storage arena, then
.I realloc\^
will ask
.I malloc\^
to enlarge the arena by
.I size\^
bytes and will then move the data to the new space.
.PP
.I Realloc\^
also works if
.I ptr\^
points to a block freed since the last call of
.IR malloc ,
.IR realloc ,
or
.IR calloc ;
thus sequences of
.IR free ,
.I malloc\^
and
.I realloc\^
can exploit the search strategy of
.I malloc\^
to do storage compaction.
.PP
.I Calloc\^
allocates space for
an array of
.I nelem\^
elements of size
.IR elsize .
The space is initialized to zeros.
.PP
Each of the allocation routines returns a pointer
to space suitably aligned (after possible pointer coercion)
for storage of any type of object.
.SH "SEE ALSO"
brk(2), malloc(3X).
.SH DIAGNOSTICS
.IR Malloc ,
.I realloc\^
and
.I calloc\^
return a
.SM NULL
pointer if there is no available memory
or if the arena has been detectably corrupted by storing outside the bounds
of a block.
When this happens
the block
pointed to by
.I ptr\^
may be destroyed.
.SH NOTE
Search time increases when many objects have been allocated; that is,
if a program allocates but never frees, then each successive allocation
takes longer.
For an alternate, more flexible implementation, see
.IR malloc (3X).
.\"	%W% of %G%
