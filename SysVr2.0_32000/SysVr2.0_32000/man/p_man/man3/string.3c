.ig
@(#)string.3c	1.2	10/17/84
@(#)Copyright (C) 1984 by National Semiconductor Corp.
..
.TH STRING 3C 
.SH NAME
strcat, strncat, strcmp, strncmp, strcpy, strncpy, strlen, strchr, strrchr, strpbrk, strspn, strcspn, strtok \- string operations
.SH SYNOPSIS
.nf
.B #include <string.h>
.PP
.B char \(**strcat (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B char \(**strncat (s1, s2, n)
.B char \(**s1, \(**s2;
.B int n;
.PP
.B int strcmp (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B int strncmp (s1, s2, n)
.B char \(**s1, \(**s2;
.B int n;
.PP
.B char \(**strcpy (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B char \(**strncpy (s1, s2, n)
.B char \(**s1, \(**s2;
.B int n;
.PP
.B int strlen (s)
.B char \(**s;
.PP
.B char \(**strchr (s, c)
.B char \(**s;
.B int c;
.PP
.B char \(**strrchr (s, c)
.B char \(**s;
.B int c;
.PP
.B char \(**strpbrk (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B int strspn (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B int strcspn (s1, s2)
.B char \(**s1, \(**s2;
.PP
.B char \(**strtok (s1, s2)
.B char \(**s1, \(**s2;
.SH DESCRIPTION
The arguments
.B s1, s2
and
.B s\^
point to strings (arrays of characters terminated by a
null character).
The functions
.IR strcat ,
.IR strncat ,
.IR strcpy ,
and
.I strncpy\^
all alter
.BR s1 .
These functions do not check for overflow of
the array pointed to by
.BR s1 .
.PP
.I Strcat\^
appends a copy of string
.B s2\^
to the end of string
.BR s1 .
.I Strncat\^
appends at most
.B n\^
characters.
Each returns a pointer to the null-terminated result.
.PP
.I Strcmp\^
compares its arguments and returns an integer
less than, equal to, or greater than 0,
according as
.B s1\^
is lexicographically less than, equal to, or
greater than
.BR s2 .
.I Strncmp\^
makes the same comparison but looks at at most
.B n\^
characters.
.PP
.I Strcpy\^
copies string
.B s2\^
to
.BR s1 ,
stopping after the null character has been copied.
.I Strncpy\^
copies exactly
.B n\^
characters,
truncating
.B s2\^
or adding
null characters to 
.B s1\^
if necessary.
The result will not be null-terminated if the length
of
.B s2\^
is
.B n\^
or more.
Each function returns
.BR s1 .
.PP
.I Strlen\^
returns the number of characters in
.BR s ,
not including the terminating null character.
.PP
.I Strchr\^
.RI ( strrchr )
returns a pointer to the first (last)
occurrence of character 
.B c\^
in string
.BR s ,
or a
.SM NULL
pointer if
.B c\^
does not occur in the string.
The null character terminating a string is considered to
be part of the string.
.PP
.I Strpbrk\^
returns a pointer to the first occurrence in string
.B s1\^
of any character from string
.BR s2 ,
or a
.SM NULL
pointer if no character from
.B s2\^
exists in
.BR s1 .
.PP
.I Strspn\^
.RI ( strcspn )
returns the length of the initial segment of string
.B s1\^
which consists entirely of characters from (not from) string
.BR s2 .
.PP
.I Strtok\^
considers the string
.B s1\^
to consist of a sequence of zero or more text tokens separated
by spans of one or more characters from the separator string
.BR s2 .
The first call (with pointer
.B s1\^
specified) returns a pointer to the first character of the first
token, and will have written a
null character into
.B s1\^
immediately following the returned token. The function
keeps track of its position in the string
between separate calls, so that subsequent calls
(which must be made with the first 
argument a
.SM NULL
pointer) will work through the string
.B s1\^
immediately following that token.
In this way subsequent calls
will work through the string
.B s1\^
until no tokens remain.
The separator string
.B s2\^
may be different from call to call.
When no token remains in
.BR s1 ,
a
.SM NULL
pointer is returned.
.SH NOTE
For user convenience, all these functions are declared in the optional
.I <string.h>
header file.
.SH BUGS
.I Strcmp\^
and
.I strncmp\^
use native character comparison, which is signed
on
the
SYS32.
Thus the sign of the value returned when
one of the characters has its high-order bit set
is negative.
.PP
Character movement is performed differently in different implementations.
Thus overlapping moves may yield surprises.
.\"	@(#)string.3c	1.2 of 10/17/84
