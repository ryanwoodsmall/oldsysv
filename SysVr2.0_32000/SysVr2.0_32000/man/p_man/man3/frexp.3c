.TH FREXP 3C
.SH NAME
frexp, ldexp, modf \- manipulate parts of floating-point numbers
.SH SYNOPSIS
.nf
.B double frexp (value, eptr)
.B double value;
.B int \(**eptr;
.PP
.B double ldexp (value, exp)
.B double value;
.B int exp;
.PP
.B double modf (value, iptr)
.B double value, \(**iptr;
.SH DESCRIPTION
Every non-zero number can be written uniquely as
.IR x\| "\(** 2" \u\s-2n\s+2\d ,
where the ``mantissa'' (fraction)
.I x\^
is in the range
.RI "0.5 \(<= |" \|x\| "| < 1.0,"
and the ``exponent''
.I n\^
is an integer.
.I Frexp\^
returns the mantissa of a double 
.IR value ,
and stores the exponent
indirectly in the location pointed to by 
.IR eptr .
If
.I value\^
is zero,
both results returned by
.I frexp\^
are zero.
.PP
.I Ldexp\^
returns the quantity
.IR value\| "\(** 2" \u\s-2exp\s+2\d .
.PP
.I Modf\^
returns the signed fractional part of
.I value\^
and stores the integral part indirectly
in the location pointed to by 
.IR iptr .
.SH DIAGNOSTICS
If
.I ldexp\^
would cause overflow,
.SM
.B \(+-HUGE
is returned
(according to the sign of
.IR value ),
and
.I errno\^
is set to
.SM
.BR ERANGE\*S .
.br
If
.I ldexp\^
would cause underflow,
zero
is returned
and
.I errno\^
is set to
.SM
.BR ERANGE\*S .
.\"	%W% of %G%
