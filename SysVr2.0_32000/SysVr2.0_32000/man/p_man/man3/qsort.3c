.TH QSORT 3C 
.SH NAME
qsort \- quicker sort
.SH SYNOPSIS
.B "void qsort ((char \(**) base, nel, sizeof (\(**base), compar)"
.br
.B unsigned nel;
.br
.B int (\(**compar)( );
.SH DESCRIPTION
.I Qsort\^
is an implementation
of the quicker-sort algorithm.
It sorts a table of data in place.
.PP
.I Base\^
points to the element at the base of the table.
.I Nel\^
is the number of elements in the table.
.I Compar\^
is the name of the comparison function,
which is called with two arguments that point
to the elements being compared.
As the function must return an integer
less than, equal to, or greater than zero,
so must the first argument to be considered
be less than, equal to, or greater than the second.
.SH NOTES
The pointer to the base of the table should be
of type pointer-to-element,
and cast to type pointer-to-character.
.br
The comparison function need not compare every byte,
so arbitrary data may be contained in the elements in addition to the values
being compared.
.br
The order in the output of two items which compare as equal is unpredictable.
.SH SEE ALSO
bsearch(3C),
lsearch(3C),
string(3C).
.br
sort(1) in the
\f2\s-1UNIX\s+1 System V User Reference Manual\fR.
.\"	%W% of %G%
