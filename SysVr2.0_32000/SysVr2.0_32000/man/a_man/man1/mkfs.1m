'\" t
.TH MKFS 1M
.SH NAME
mkfs \- construct a file system
.SH SYNOPSIS
.B /etc/mkfs
special
blocks[:i-nodes]
[gap blocks/cyl]
.br
.B /etc/mkfs
special
proto
[gap blocks/cyl]
.SH DESCRIPTION
.I Mkfs\^
constructs a file system by writing on the special
file according to the directions found in the remainder of the
command line.
The command waits 10 seconds before starting to construct the file system.
If the second argument is given as a
string of digits, 
.I mkfs\^
builds a file system with a single empty directory
on it. The size of the file system is the value of
.I blocks\^
interpreted as a decimal number. 
This is the number of
.I physical\^
disk blocks the file system will occupy.
The boot program is left uninitialized. If the
optional number of i-nodes is not given, the default
is the number of
.I logical\^
blocks divided by 4.
.PP
If the second argument is a file name
that can be opened,
.I mkfs\^
assumes it to be a prototype file
.IR proto ,
and will take its directions from that file.
The prototype file
contains tokens separated by spaces or
new-lines.
The first token is the name of a file
to be copied onto block zero as
the bootstrap program.
The second token is a number specifying the
size of the created file system in
.I physical\^
disk blocks.
Typically it will be the number of blocks on the device,
perhaps diminished
by space for swapping.
The next token is the number of i-nodes in the file system.
The maximum number of i-nodes configurable is 65500.
The next set of tokens comprise the specification
for the root file.
File specifications consist of tokens
giving the mode,
the user \s-1ID\s0,
the group \s-1ID\s0,
and the initial contents of the file.
The syntax of the contents field
depends on the mode.
.PP
The mode token for a file is a 6-character string.
The first character
specifies the type of the file.
(The characters
.B \-bcd
specify regular, block special,
character special and directory files
respectively.)
The second character of the type
is either
.B u
or
.B \-
to specify set-user-id mode or not.
The third is
.B g
or
.B \-
for the set-group-id mode.
The rest of the mode
is a 3 digit octal number giving the
owner, group, and other read, write, execute
permissions [see
.IR chmod (1)].
.PP
Two decimal number
tokens come after the mode; they specify the
user and group \s-1ID\s0s of the owner of the file.
.PP
If the file is a regular file,
the next token is a pathname
whence the contents and size are copied.
If the file is a block or character special file,
two decimal number tokens
follow which give the major and minor device numbers.
If the file is a directory,
.I mkfs\^
makes the entries
.BR . ""
and
.B  ..
and then
reads a list of names and
(recursively)
files specifications for the entries
in the directory.
The scan is terminated with the
token
.BR $ .
.PP
A sample prototype specification follows:
.PP
.nf
.in +5
.RI /stand/ diskboot\^
4872 110
d\-\-777 3 1
usr	d\-\-777 3 1
	sh	\-\-\-755 3 1 /bin/sh
	ken	d\-\-755 6 1
		$
	b0	b\-\-644 3 1 0 0
	c0	c\-\-644 3 1 0 0
	$
$
.in -5
.fi
.PP
In both command syntaxes, the rotational
.I gap\^
and the number of
.I blocks/cyl\^
can be specified.
The following values are recommended:
.PP
.TS
center;
c c c
l  n  n.
Device	Gap Size	Blks/Cyl
_
\fIdefault\fP	7	400
.TE
.PP
The
.I default
will be used if the supplied
.I gap
and
.I blocks/cyl
are considered illegal values
or if a short argument count occurs.
.SH SEE ALSO
chmod(1),
dir(4), fs(4).
.SH BUGS
If a prototype is used, it is not possible to initialize
a file larger than 64K bytes, nor is there a way
to specify links.
.\"	@(#)mkfs.1m	6.2 of 9/2/83
