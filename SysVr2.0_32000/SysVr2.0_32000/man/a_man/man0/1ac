.xx "" "" "sag: system activity graph." "" sag(1G)
.xx "" "" "sar: system activity reporter." "" sar(1)
.xx "space allocation." "brk," "sbrk: change data segment" "" brk(2)
.xx "formatted input." "" "scanf, fscanf, sscanf: convert" "" scanf(3S)
.xx "" "bfs: big file" "scanner." "" bfs(1)
.xx "language." "awk: pattern" "scanning and processing" "" awk(1)
.xx "stand-alone programs." "" "scc: C compiler for" "" scc(1)
.xx "" "the delta commentary of an" "SCCS delta." "cdc: change" cdc(1)
.xx "" "comb: combine" "SCCS deltas." "" comb(1)
.xx "" "make a delta (change) to an" "SCCS file." "delta:" delta(1)
.xx "" "sact: print current" "SCCS file editing activity." "" sact(1)
.xx "" "get: get a version of an" "SCCS file." "" get(1)
.xx "" "prs: print an" "SCCS file." "" prs(1)
.xx "" "rmdel: remove a delta from an" "SCCS file." "" rmdel(1)
.xx "" "compare two versions of an" "SCCS file." "sccsdiff:" sccsdiff(1)
.xx "" "sccsfile: format of" "SCCS file." "" sccsfile(4)
.xx "" "undo a previous get of an" "SCCS file." "unget:" unget(1)
.xx "" "val: validate" "SCCS file." "" val(1)
.xx "" "admin: create and administer" "SCCS files." "" admin(1)
.xx "" "what: identify" "SCCS files." "" what(1)
.xx "of an SCCS file." "" "sccsdiff: compare two versions" "" sccsdiff(1)
.xx "" "" "sccsfile: format of SCCS file." "" sccsfile(4)
.xx "" "/start/stop the LP request" "scheduler and move requests." "" lpsched(1M)
.xx "common object file." "" "scnhdr: section header for a" "" scnhdr(4)
.xx "optimization/" "curses: CRT" "screen handling and" "" curses(3X)
.xx "display editor based on/" "vi:" "screen-oriented (visual)" "" vi(1)
.xx "" "inittab:" "script for the init process." "" inittab(4)
.xx "" "system initialization shell" "scripts." "/rc, powerfail:" brc(1M)
.xx "" "" "sdb: symbolic debugger." "" sdb(1)
.xx "program." "" "sdiff: side-by-side difference" "" sdiff(1)
.xx "" "grep, egrep, fgrep:" "search a file for a pattern." "" grep(1)
.xx "" "bsearch: binary" "search a sorted table." "" bsearch(3C)
.xx "accounting file(s)." "acctcom:" "search and print process" "" acctcom(1)
.xx "" "lsearch, lfind: linear" "search and update." "" lsearch(3C)
.xx "" "hcreate, hdestroy: manage hash" "search tables." "hsearch," hsearch(3C)
.xx "" "tdelete, twalk: manage binary" "search trees." "tsearch, tfind," tsearch(3C)
.xx "" "jotto:" "secret word game." "" jotto(6)
.xx "object file." "scnhdr:" "section header for a common" "" scnhdr(4)
.xx "object/" "/read an indexed\/named" "section header of a common" "" ldshread(3X)
.xx "" "/to line number entries of a" "section of a common object/" "" ldlseek(3X)
.xx "" "/to relocation entries of a" "section of a common object/" "" ldrseek(3X)
.xx "" "/seek to an indexed\/named" "section of a common object/" "" ldsseek(3X)
.xx "files." "size: print" "section sizes of common object" "" size(1)
.xx "" "" "sed: stream editor." "" sed(1)
.xx "" "/mrand48, jrand48, srand48," "seed48, lcong48: generate/" "" drand48(3C)
.xx "section of/" "ldsseek, ldnsseek:" "seek to an indexed\/named" "" ldsseek(3X)
.xx "a section/" "ldlseek, ldnlseek:" "seek to line number entries of" "" ldlseek(3X)
.xx "a section/" "ldrseek, ldnrseek:" "seek to relocation entries of" "" ldrseek(3X)
.xx "header of a common/" "ldohseek:" "seek to the optional file" "" ldohseek(3X)
.xx "common object file." "ldtbseek:" "seek to the symbol table of a" "" ldtbseek(3X)
.xx "" "shmget: get shared memory" "segment." "" shmget(2)
.xx "" "brk, sbrk: change data" "segment space allocation." "" brk(2)
.xx "to two sorted files." "comm:" "select or reject lines common" "" comm(1)
.xx "" "greek:" "select terminal filter." "" greek(1)
.xx "of a file." "cut: cut out" "selected fields of each line" "" cut(1)
.xx "file." "dump: dump" "selected parts of an object" "" dump(1)
.xx "" "semctl:" "semaphore control operations." "" semctl(2)
.xx "" "semop:" "semaphore operations." "" semop(2)
.xx "" "ipcrm: remove a message queue," "semaphore set or shared memory/" "" ipcrm(1)
.xx "" "semget: get set of" "semaphores." "" semget(2)
.xx "operations." "" "semctl: semaphore control" "" semctl(2)
.xx "" "" "semget: get set of semaphores." "" semget(2)
.xx "" "" "semop: semaphore operations." "" semop(2)
.xx "a group of processes." "kill:" "send a signal to a process or" "" kill(2)
.xx "and/or submit RJE jobs." "" "send, gath: gather files" "" send(1C)
.xx "mail." "mail, rmail:" "send mail to users or read" "" mail(1)
.xx "line printer." "lp, cancel:" "send/cancel requests to an LP" "" lp(1)
.xx "asynchronous/" "sio -" "serial input/output" "" sio(7)
.xx "buffering to a stream." "" "setbuf, setvbuf: assign" "" setbuf(3S)
.xx "IDs." "setuid," "setgid: set user and group" "" setuid(2)
.xx "" "getgrent, getgrgid, getgrnam," "setgrent, endgrent, fgetgrent:/" "" getgrent(3C)
.xx "goto." "" "setjmp, longjmp: non-local" "" setjmp(3C)
.xx "" "" "setmnt: establish mount table." "" setmnt(1M)
.xx "" "" "setpgrp: set process group ID." "" setpgrp(2)
.xx "" "getpwent, getpwuid, getpwnam," "setpwent, endpwent, fgetpwent:/" "" getpwent(3C)
.xx "login time." "profile:" "setting up an environment at" "" profile(4)
.xx "" "gettydefs: speed and terminal" "settings used by getty." "" gettydefs(4)
.xx "group IDs." "" "setuid, setgid: set user and" "" setuid(2)
.xx "" "/getutid, getutline, pututline," "setutent, endutent, utmpname:/" "" getut(3C)
.xx "stream." "setbuf," "setvbuf: assign buffering to a" "" setbuf(3S)
.xx "data in a/" "sputl," "sgetl: access long integer" "" sputl(3X)
.xx "standard/restricted command/" "" "sh, rsh: shell, the" "" sh(1)
.xx "operations." "shmctl:" "shared memory control" "" shmctl(2)
.xx "" "queue, semaphore set or" "shared memory id." "/a message" ipcrm(1)
.xx "" "shmop:" "shared memory operations." "" shmop(2)
.xx "" "shmget: get" "shared memory segment." "" shmget(2)
.xx "" "system: issue a" "shell command from FORTRAN." "" system(3F)
.xx "" "system: issue a" "shell command." "" system(3S)
.xx "" "shl:" "shell layer manager." "" shl(1)
.xx "" "shutacct, startup, turnacct:" "shell procedures for/" "/runacct," acctsh(1M)
.xx "" "system initialization" "shell scripts." "/rc, powerfail:" brc(1M)
.xx "command programming/" "sh, rsh:" "shell, the standard/restricted" "" sh(1)
.xx "" "" "shl: shell layer manager." "" shl(1)
.xx "operations." "" "shmctl: shared memory control" "" shmctl(2)
.xx "segment." "" "shmget: get shared memory" "" shmget(2)
.xx "operations." "" "shmop: shared memory" "" shmop(2)
.xx "" "/prdaily, prtacct, runacct," "shutacct, startup, turnacct:/" "" acctsh(1M)
.xx "processing." "" "shutdown: terminate all" "" shutdown(1M)
.xx "program." "sdiff:" "side-by-side difference" "" sdiff(1)
.xx "transfer-of-sign intrinsic/" "" "sign, isign, dsign: FORTRAN" "" sign(3F)
.xx "" "login:" "sign on." "" login(1)
.xx "" "pause: suspend process until" "signal." "" pause(2)
.xx "" "what to do upon receipt of a" "signal." "signal: specify" signal(2)
.xx "" "action on receipt of a system" "signal." "/specify FORTRAN" signal(3F)
.xx "on receipt of a system/" "" "signal: specify FORTRAN action" "" signal(3F)
.xx "upon receipt of a signal." "" "signal: specify what to do" "" signal(2)
.xx "of processes." "kill: send a" "signal to a process or a group" "" kill(2)
.xx "" "ssignal, gsignal: software" "signals." "" ssignal(3C)
.xx "" "lex: generate programs for" "simple lexical tasks." "" lex(1)
.xx "generator." "rand, srand:" "simple random-number" "" rand(3C)
.xx "atan, atan2: trigonometric/" "" "sin, cos, tan, asin, acos," "" trig(3M)
.xx "intrinsic function." "" "sin, dsin, csin: FORTRAN sine" "" sin(3F)
.xx "" "sin, dsin, csin: FORTRAN" "sine intrinsic function." "" sin(3F)
.xx "" "/dsinh: FORTRAN hyperbolic" "sine intrinsic function." "" sinh(3F)
.xx "functions." "" "sinh, cosh, tanh: hyperbolic" "" sinh(3M)
.xx "hyperbolic sine intrinsic/" "" "sinh, dsinh: FORTRAN" "" sinh(3F)
.xx "asynchronous multiplexor." "" "sio - serial input/output" "" sio(7)
.xx "common object files." "" "size: print section sizes of" "" size(1)
.xx "" "size: print section" "sizes of common object files." "" size(1)
.xx "an interval." "" "sleep: suspend execution for" "" sleep(1)
.xx "interval." "" "sleep: suspend execution for" "" sleep(3C)
.xx "current/" "ttyslot: find the" "slot in the utmp file of the" "" ttyslot(3C)
.xx "" "spline: interpolate" "smooth curve." "" spline(1G)
.xx "" "int, ifix, idint, real, float," "sngl, dble, cmplx, dcmplx,/" "" ftype(3F)
.xx "" "" "sno: SNOBOL interpreter." "" sno(1)
.xx "" "sno:" "SNOBOL interpreter." "" sno(1)
.xx "" "pg: file perusal filter for" "soft-copy terminals." "" pg(1)
.xx "" "ssignal, gsignal:" "software signals." "" ssignal(3C)
.xx "" "sort:" "sort and/or merge files." "" sort(1)
.xx "" "qsort: quicker" "sort." "" qsort(3C)
.xx "" "" "sort: sort and/or merge files." "" sort(1)
.xx "" "tsort: topological" "sort." "" tsort(1)
.xx "" "or reject lines common to two" "sorted files." "comm: select" comm(1)
.xx "" "bsearch: binary search a" "sorted table." "" bsearch(3C)
.xx "" "brk, sbrk: change data segment" "space allocation." "" brk(2)
.xx "terminal." "ct:" "spawn getty to a remote" "" ct(1C)
.xx "" "fspec: format" "specification in text files." "" fspec(4)
.xx "receipt of a system/" "signal:" "specify FORTRAN action on" "" signal(3F)
.xx "receipt of a signal." "signal:" "specify what to do upon" "" signal(2)
.xx "" "/set terminal type, modes," "speed, and line discipline." "" getty(1M)
.xx "used by getty." "gettydefs:" "speed and terminal settings" "" gettydefs(4)
.xx "hashcheck: find spelling/" "" "spell, hashmake, spellin," "" spell(1)
.xx "spelling/" "spell, hashmake," "spellin, hashcheck: find" "" spell(1)
.xx "" "spellin, hashcheck: find" "spelling errors." "/hashmake," spell(1)
.xx "curve." "" "spline: interpolate smooth" "" spline(1G)
.xx "" "split:" "split a file into pieces." "" split(1)
.xx "" "csplit: context" "split." "" csplit(1)
.xx "files." "fsplit:" "split f77, ratfor, or ef\&l" "" fsplit(1)
.xx "pieces." "" "split: split a file into" "" split(1)
.xx "" "uuclean: uucp" "spool directory clean-up." "" uuclean(1M)
.xx "" "lpadmin: configure the LP" "spooling system." "" lpadmin(1M)
.xx "output." "printf, fprintf," "sprintf: print formatted" "" printf(3S)
.xx "integer data in a/" "" "sputl, sgetl: access long" "" sputl(3X)
.xx "square root intrinsic/" "" "sqrt, dsqrt, csqrt: FORTRAN" "" sqrt(3F)
.xx "power,/" "exp, log, log10, pow," "sqrt: exponential, logarithm," "" exp(3M)
.xx "" "exponential, logarithm, power," "square root functions." "/sqrt:" exp(3M)
.xx "" "sqrt, dsqrt, csqrt: FORTRAN" "square root intrinsic/" "" sqrt(3F)
.xx "generator." "irand, rand," "srand: random number" "" rand(3F)
.xx "generator." "rand," "srand: simple random-number" "" rand(3C)
.xx "" "/nrand48, mrand48, jrand48," "srand48, seed48, lcong48:/" "" drand48(3C)
.xx "input." "scanf, fscanf," "sscanf: convert formatted" "" scanf(3S)
.xx "signals." "" "ssignal, gsignal: software" "" ssignal(3C)
.xx "" "scc: C compiler for" "stand-alone programs." "" scc(1)
.xx "package." "stdio:" "standard buffered input/output" "" stdio(3S)
.xx "communication package." "ftok:" "standard interprocess" "" stdipc(3C)
.xx "" "sh, rsh: shell, the" "standard/restricted command/" "" sh(1)
.xx "" "lpsched, lpshut, lpmove:" "start/stop the LP request/" "" lpsched(1M)
.xx "" "/prtacct, runacct, shutacct," "startup, turnacct: shell/" "" acctsh(1M)
.xx "system call." "" "stat: data returned by stat" "" stat(5)
.xx "" "" "stat, fstat: get file status." "" stat(2)
.xx "useful with graphical/" "" "stat: statistical network" "" stat(1G)
.xx "" "stat: data returned by" "stat system call." "" stat(5)
.xx "with graphical/" "stat:" "statistical network useful" "" stat(1G)
.xx "" "f\&f: list file names and" "statistics for a file system." "" ff(1M)
.xx "" "ustat: get file system" "statistics." "" ustat(2)
.xx "" "status report and interactive" "status console." "rjestat: RJE" rjestat(1C)
.xx "" "lpstat: print LP" "status information." "" lpstat(1)
.xx "" "feof, clearerr, fileno: stream" "status inquiries." "ferror," ferror(3S)
.xx "control." "uustat: uucp" "status inquiry and job" "" uustat(1C)
.xx "" "communication facilities" "status." "/report inter-process" ipcs(1)
.xx "" "ps: report process" "status." "" ps(1)
.xx "status console." "rjestat: RJE" "status report and interactive" "" rjestat(1C)
.xx "" "stat, fstat: get file" "status." "" stat(2)
.xx "input/output package." "" "stdio: standard buffered" "" stdio(3S)
.xx "" "" "stime: set time." "" stime(2)
.xx "" "wait for child process to" "stop or terminate." "wait:" wait(2)
.xx "strncmp, strcpy, strncpy,/" "" "strcat, strncat, strcmp," "" string(3C)
.xx "" "/strcpy, strncpy, strlen," "strchr, strrchr, strpbrk,/" "" string(3C)
.xx "strncpy,/" "strcat, strncat," "strcmp, strncmp, strcpy," "" string(3C)
.xx "" "/strncat, strcmp, strncmp," "strcpy, strncpy, strlen,/" "" string(3C)
.xx "" "/strrchr, strpbrk, strspn," "strcspn, strtok: string/" "" string(3C)
.xx "" "sed:" "stream editor." "" sed(1)
.xx "" "fflush: close or flush a" "stream." "fclose," fclose(3S)
.xx "" "fopen, freopen, fdopen: open a" "stream." "" fopen(3S)
.xx "" "reposition a file pointer in a" "stream." "fseek, rewind, ftell:" fseek(3S)
.xx "" "get character or word from a" "stream." "/getchar, fgetc, getw:" getc(3S)
.xx "" "fgets: get a string from a" "stream." "gets," gets(3S)
.xx "" "put character or word on a" "stream." "/putchar, fputc, putw:" putc(3S)
.xx "" "puts, fputs: put a string on a" "stream." "" puts(3S)
.xx "" "setvbuf: assign buffering to a" "stream." "setbuf," setbuf(3S)
.xx "" "/feof, clearerr, fileno:" "stream status inquiries." "" ferror(3S)
.xx "" "push character back into input" "stream." "ungetc:" ungetc(3S)
.xx "" "tc:" "streaming tape interface." "" tc(7)
.xx "" "long integer and base-64 ASCII" "string." "/l64a: convert between" a64l(3C)
.xx "" "lge, lgt, lle, llt:" "string comparison intrinsic/" "" strcmp(3F)
.xx "" "convert date and time to" "string." "/asctime, tzset:" ctime(3C)
.xx "" "floating-point number to" "string." "/fcvt, gcvt: convert" ecvt(3C)
.xx "" "gps: graphical primitive" "string, format of graphical/" "" gps(4)
.xx "" "gets, fgets: get a" "string from a stream." "" gets(3S)
.xx "" "len: return length of FORTRAN" "string." "" len(3F)
.xx "" "puts, fputs: put a" "string on a stream." "" puts(3S)
.xx "" "strspn, strcspn, strtok:" "string operations." "/strpbrk," string(3C)
.xx "number." "strtod, atof: convert" "string to double-precision" "" strtod(3C)
.xx "" "strtol, atol, atoi: convert" "string to integer." "" strtol(3C)
.xx "number information from a/" "" "strip: strip symbol and line" "" strip(1)
.xx "information from a/" "strip:" "strip symbol and line number" "" strip(1)
.xx "" "/strncmp, strcpy, strncpy," "strlen, strchr, strrchr,/" "" string(3C)
.xx "strcpy, strncpy,/" "strcat," "strncat, strcmp, strncmp," "" string(3C)
.xx "" "strcat, strncat, strcmp," "strncmp, strcpy, strncpy,/" "" string(3C)
.xx "" "/strcmp, strncmp, strcpy," "strncpy, strlen, strchr,/" "" string(3C)
.xx "" "/strlen, strchr, strrchr," "strpbrk, strspn, strcspn,/" "" string(3C)
.xx "" "/strncpy, strlen, strchr," "strrchr, strpbrk, strspn,/" "" string(3C)
.xx "" "/strchr, strrchr, strpbrk," "strspn, strcspn, strtok:/" "" string(3C)
.xx "to double-precision number." "" "strtod, atof: convert string" "" strtod(3C)
.xx "" "/strpbrk, strspn, strcspn," "strtok: string operations." "" string(3C)
.xx "string to integer." "" "strtol, atol, atoi: convert" "" strtol(3C)
.xx "" "processes using a file or file" "structure." "fuser: identify" fuser(1M)
.xx "terminal." "" "stty: set the options for a" "" stty(1)
.xx "another user." "" "su: become super-user or" "" su(1)
.xx "" "gath: gather files and/or" "submit RJE jobs." "send," send(1C)
.xx "" "intro: introduction to" "subroutines and libraries." "" intro(3)
.xx "" "plot: graphics interface" "subroutines." "" plot(3X)
.xx "" "/same lines of several files or" "subsequent lines of one file." "" paste(1)
.xx "" "return location of FORTRAN" "substring." "index:" index(3F)
.xx "count of a file." "" "sum: print checksum and block" "" sum(1)
.xx "" "du:" "summarize disk usage." "" du(1)
.xx "accounting/" "acctcms: command" "summary from per-process" "" acctcms(1M)
.xx "" "sync: update the" "super block." "" sync(1)
.xx "" "sync: update" "super-block." "" sync(2)
.xx "" "su: become" "super-user or another user." "" su(1)
.xx "" "qasurvey: Quality Assurance" "Survey." "" qasurvey(1M)
.xx "interval." "sleep:" "suspend execution for an" "" sleep(1)
.xx "interval." "sleep:" "suspend execution for" "" sleep(3C)
.xx "" "pause:" "suspend process until signal." "" pause(2)
.xx "" "" "swab: swap bytes." "" swab(3C)
.xx "" "swab:" "swap bytes." "" swab(3C)
.xx "" "" "sxt: pseudo-device driver." "" sxt(7)
.xx "information from/" "strip: strip" "symbol and line number" "" strip(1)
.xx "file/" "ldgetname: retrieve" "symbol name for common object" "" ldgetname(3X)
.xx "" "name for common object file" "symbol table entry." "/symbol" ldgetname(3X)
.xx "object/" "/compute the index of a" "symbol table entry of a common" "" ldtbindex(3X)
.xx "" "ldtbread: read an indexed" "symbol table entry of a common/" "" ldtbread(3X)
.xx "" "syms: common object file" "symbol table format." "" syms(4)
.xx "object/" "ldtbseek: seek to the" "symbol table of a common" "" ldtbseek(3X)
.xx "" "sdb:" "symbolic debugger." "" sdb(1)
.xx "symbol table format." "" "syms: common object file" "" syms(4)
.xx "" "" "sync: update super-block." "" sync(2)
.xx "" "" "sync: update the super block." "" sync(1)
.xx "" "NSCops: NSC" "SYS32 console operations." "" nscops(8)
.xx "" "" "sysdef: system definition." "" sysdef(1M)
.xx "error/" "perror, errno," "sys_errlist, sys_nerr: system" "" perror(3C)
.xx "" "perror, errno, sys_errlist," "sys_nerr: system error/" "" perror(3C)
.xx "" "binary search a sorted" "table." "bsearch:" bsearch(3C)
.xx "" "for common object file symbol" "table entry." "/symbol name" ldgetname(3X)
.xx "" "/compute the index of a symbol" "table entry of a common object/" "" ldtbindex(3X)
.xx "file." "/read an indexed symbol" "table entry of a common object" "" ldtbread(3X)
.xx "" "common object file symbol" "table format." "syms:" syms(4)
.xx "" "master device information" "table." "master:" master(4)
.xx "" "mnttab: mounted file system" "table." "" mnttab(4)
.xx "" "ldtbseek: seek to the symbol" "table of a common object file." "" ldtbseek(3X)
.xx "" "toc: graphical" "table of contents routines." "" toc(1G)
.xx "" "setmnt: establish mount" "table." "" setmnt(1M)
.xx "" "hdestroy: manage hash search" "tables." "hsearch, hcreate," hsearch(3C)
.xx "" "change the disk partition" "tables.." "mkpt:" mkpt(1M)
.xx "" "tabs: set" "tabs on a terminal." "" tabs(1)
.xx "" "" "tabs: set tabs on a terminal." "" tabs(1)
.xx "a file." "" "tail: deliver the last part of" "" tail(1)
.xx "trigonometric/" "sin, cos," "tan, asin, acos, atan, atan2:" "" trig(3M)
.xx "intrinsic function." "" "tan, dtan: FORTRAN tangent" "" tan(3F)
.xx "" "tan, dtan: FORTRAN" "tangent intrinsic function." "" tan(3F)
.xx "" "/dtanh: FORTRAN hyperbolic" "tangent intrinsic function." "" tanh(3F)
.xx "hyperbolic tangent intrinsic/" "" "tanh, dtanh: FORTRAN" "" tanh(3F)
.xx "" "sinh, cosh," "tanh: hyperbolic functions." "" sinh(3M)
.xx "" "hpio: HP 2645A terminal" "tape file archiver." "" hpio(1)
.xx "" "tar:" "tape file archiver." "" tar(1)
.xx "" "recover files from a backup" "tape." "frec:" frec(1M)
.xx "" "tc: streaming" "tape interface." "" tc(7)
.xx "" "mt: cartridge" "tape manipulating program." "" mt(1M)
.xx "system file system/" "filesave," "tapesave: daily/weekly UNIX" "" filesave(1M)
.xx "" "" "tar: tape file archiver." "" tar(1)
.xx "" "programs for simple lexical" "tasks." "lex: generate" lex(1)
.xx "" "" "tc: streaming tape interface." "" tc(7)
.xx "" "hpd, erase, hardcopy, tekset," "td: graphical device routines/" "" gdev(1G)
.xx "search trees." "tsearch, tfind," "tdelete, twalk: manage binary" "" tsearch(3C)
.xx "" "" "tee: pipe fitting." "" tee(1)
.xx "" "hpd, erase, hardcopy," "tekset, td: graphical device/" "" gdev(1G)
.xx "" "4014: paginator for the" "TEKTRONIX 4014 terminal." "" 4014(1)
.xx "initialization." "init," "telinit: process control" "" init(1M)
.xx "temporary file." "tmpnam," "tempnam: create a name for a" "" tmpnam(3S)
.xx "" "tmpfile: create a" "temporary file." "" tmpfile(3S)
.xx "" "tempnam: create a name for a" "temporary file." "tmpnam," tmpnam(3S)
.xx "terminals." "" "term: conventional names for" "" term(5)
.xx "" "term: format of compiled" "term file.." "" term(4)
.xx "file.." "" "term: format of compiled term" "" term(4)
.xx "" "for the TEKTRONIX 4014" "terminal." "4014: paginator" 4014(1)
.xx "" "functions of the DASI 450" "terminal." "450: handle special" 450(1)
.xx "" "terminfo:" "terminal capability data base." "" terminfo(4)
.xx "" "ct: spawn getty to a remote" "terminal." "" ct(1C)
.xx "" "generate file name for" "terminal." "ctermid:" ctermid(3S)
.xx "" "greek: select" "terminal filter." "" greek(1)
.xx "" "termio: general" "terminal interface." "" termio(7)
.xx "" "tty: controlling" "terminal interface." "" tty(7)
.xx "" "dial: establish an out-going" "terminal line connection." "" dial(3C)
.xx "getty." "gettydefs: speed and" "terminal settings used by" "" gettydefs(4)
.xx "" "stty: set the options for a" "terminal." "" stty(1)
.xx "" "tabs: set tabs on a" "terminal." "" tabs(1)
.xx "" "hpio: HP 2645A" "terminal tape file archiver." "" hpio(1)
.xx "" "tty: get the name of the" "terminal." "" tty(1)
.xx "" "isatty: find name of a" "terminal." "ttyname," ttyname(3C)
.xx "and line/" "getty: set" "terminal type, modes, speed," "" getty(1M)
.xx "" "functions of DASI 300 and 300s" "terminals." "/handle special" 300(1)
.xx "" "of HP 2640 and 2621-series" "terminals." "/special functions" hp(1)
.xx "" "perusal filter for soft-copy" "terminals." "pg: file" pg(1)
.xx "" "term: conventional names for" "terminals." "" term(5)
.xx "" "kill:" "terminate a process." "" kill(1)
.xx "" "shutdown:" "terminate all processing." "" shutdown(1M)
.xx "" "abort:" "terminate FORTRAN program." "" abort(3F)
.xx "" "exit, _exit:" "terminate process." "" exit(2)
.xx "daemon." "errstop:" "terminate the error-logging" "" errstop(1M)
.xx "" "for child process to stop or" "terminate." "wait: wait" wait(2)
.xx "" "tic:" "terminfo compiler." "" tic(1M)
.xx "" "tput: query" "terminfo database." "" tput(1)
.xx "data base." "" "terminfo: terminal capability" "" terminfo(4)
.xx "interface." "" "termio: general terminal" "" termio(7)
.xx "command." "" "test: condition evaluation" "" test(1)
.xx "" "dcutest: disk formatter and" "test program." "" dcutest(1M)
.xx "" "quiz:" "test your knowledge." "" quiz(6)
.xx "" "ed, red:" "text editor." "" ed(1)
.xx "" "ex:" "text editor." "" ex(1)
.xx "casual users)." "edit:" "text editor (variant of ex for" "" edit(1)
.xx "" "change the format of a" "text file." "newform:" newform(1)
.xx "" "fspec: format specification in" "text files." "" fspec(4)
.xx "" "plock: lock process," "text, or data in memory." "" plock(2)
.xx "binary search trees." "tsearch," "tfind, tdelete, twalk: manage" "" tsearch(3C)
.xx "" "" "tic: terminfo compiler." "" tic(1M)
.xx "" "ttt, cubic:" "tic-tac-toe." "" ttt(6)
.xx "data and system/" "timex:" "time a command; report process" "" timex(1)
.xx "" "time:" "time a command." "" time(1)
.xx "" "mclock: return FORTRAN" "time accounting." "" mclock(3F)
.xx "" "execute commands at a later" "time." "at, batch:" at(1)
.xx "" "systems for optimal access" "time." "dcopy: copy file" dcopy(1M)
.xx "" "" "time: get time." "" time(2)
.xx "" "profil: execution" "time profile." "" profil(2)
.xx "" "up an environment at login" "time." "profile: setting" profile(4)
.xx "" "stime: set" "time." "" stime(2)
.xx "" "" "time: time a command." "" time(1)
.xx "" "time: get" "time." "" time(2)
.xx "" "tzset: convert date and" "time to string." "/asctime," ctime(3C)
.xx "" "clock: report CPU" "time used." "" clock(3C)
.xx "process times." "" "times: get process and child" "" times(2)
.xx "" "update access and modification" "times of a file." "touch:" touch(1)
.xx "" "get process and child process" "times." "times:" times(2)
.xx "" "file access and modification" "times." "utime: set" utime(2)
.xx "process data and system/" "" "timex: time a command; report" "" timex(1)
.xx "file." "" "tmpfile: create a temporary" "" tmpfile(3S)
.xx "for a temporary file." "" "tmpnam, tempnam: create a name" "" tmpnam(3S)
.xx "" "/tolower, _toupper, _tolower," "toascii: translate characters." "" conv(3C)
.xx "contents routines." "" "toc: graphical table of" "" toc(1G)
.xx "" "popen, pclose: initiate pipe" "to/from a process." "" popen(3S)
.xx "" "toupper, tolower, _toupper," "_tolower, toascii: translate/" "" conv(3C)
.xx "toascii: translate/" "toupper," "tolower, _toupper, _tolower," "" conv(3C)
.xx "" "tsort:" "topological sort." "" tsort(1)
.xx "" "acctmerg: merge or add" "total accounting files." "" acctmerg(1M)
.xx "modification times of a file." "" "touch: update access and" "" touch(1)
.xx "translate/" "toupper, tolower," "_toupper, _tolower, toascii:" "" conv(3C)
.xx "_tolower, toascii: translate/" "" "toupper, tolower, _toupper," "" conv(3C)
.xx "" "" "tplot: graphics filters." "" tplot(1G)
.xx "" "" "tput: query terminfo database." "" tput(1)
.xx "" "" "tr: translate characters." "" tr(1)
.xx "" "" "trace: event-tracing driver." "" trace(7)
.xx "" "ptrace: process" "trace." "" ptrace(2)
.xx "" "sign, isign, dsign: FORTRAN" "transfer-of-sign intrinsic/" "" sign(3F)
.xx "" "/_toupper, _tolower, toascii:" "translate characters." "" conv(3C)
.xx "" "tr:" "translate characters." "" tr(1)
.xx "" "ftw: walk a file" "tree." "" ftw(3C)
.xx "" "twalk: manage binary search" "trees." "/tfind, tdelete," tsearch(3C)
.xx "report." "" "trenter: enter a trouble" "" trenter(1M)
.xx "" "tan, asin, acos, atan, atan2:" "trigonometric functions." "/cos," trig(3M)
.xx "" "trenter: enter a" "trouble report." "" trenter(1M)
.xx "values." "" "true, false: provide truth" "" true(1)
.xx "" "/pdp11, u3b, u3b5, vax: provide" "truth value about your/" "" machid(1)
.xx "" "true, false: provide" "truth values." "" true(1)
.xx "twalk: manage binary search/" "" "tsearch, tfind, tdelete," "" tsearch(3C)
.xx "" "" "tsort: topological sort." "" tsort(1)
.xx "" "" "ttt, cubic: tic-tac-toe." "" ttt(6)
.xx "interface." "" "tty: controlling terminal" "" tty(7)
.xx "terminal." "" "tty: get the name of the" "" tty(1)
.xx "a terminal." "" "ttyname, isatty: find name of" "" ttyname(3C)
.xx "utmp file of the current/" "" "ttyslot: find the slot in the" "" ttyslot(3C)
.xx "" "/runacct, shutacct, startup," "turnacct: shell procedures for/" "" acctsh(1M)
.xx "" "tsearch, tfind, tdelete," "twalk: manage binary search/" "" tsearch(3C)
.xx "" "ichar, char: explicit FORTRAN" "type conversion." "/dcmplx," ftype(3F)
.xx "" "file: determine file" "type." "" file(1)
.xx "" "value about your processor" "type." "/vax: provide truth" machid(1)
.xx "" "getty: set terminal" "type, modes, speed, and line/" "" getty(1M)
.xx "types." "" "types: primitive system data" "" types(5)
.xx "" "types: primitive system data" "types." "" types(5)
.xx "" "/localtime, gmtime, asctime," "tzset: convert date and time/" "" ctime(3C)
.xx "value about/" "ns16000, pdp11," "u3b, u3b5, vax: provide truth" "" machid(1)
.xx "about/" "ns16000, pdp11, u3b," "u3b5, vax: provide truth value" "" machid(1)
.xx "" "getpw: get name from" "UID." "" getpw(3C)
.xx "limits." "" "ulimit: get and set user" "" ulimit(2)
.xx "creation mask." "" "umask: set and get file" "" umask(2)
.xx "mask." "" "umask: set file-creation mode" "" umask(1)
.xx "file system." "mount," "umount: mount and dismount" "" mount(1M)
.xx "" "" "umount: unmount a file system." "" umount(2)
.xx "UNIX system." "" "uname: get name of current" "" uname(2)
.xx "UNIX system." "" "uname: print name of current" "" uname(1)
.xx "file." "unget:" "undo a previous get of an SCCS" "" unget(1)
.xx "an SCCS file." "" "unget: undo a previous get of" "" unget(1)
.xx "into input stream." "" "ungetc: push character back" "" ungetc(3S)
.xx "" "/seed48, lcong48: generate" "uniformly distributed/" "" drand48(3C)
.xx "a file." "" "uniq: report repeated lines in" "" uniq(1)
.xx "" "mktemp: make a" "unique file name." "" mktemp(3C)
.xx "" "" "units: conversion program." "" units(1)
.xx "execution." "uux:" "UNIX-to-UNIX system command" "" uux(1C)
.xx "" "uuto, uupick: public" "UNIX-to-UNIX system file copy." "" uuto(1C)
.xx "unlink system calls." "link," "unlink: exercise link and" "" link(1M)
.xx "entry." "" "unlink: remove directory" "" unlink(2)
.xx "" "unlink: exercise link and" "unlink system calls." "link," link(1M)
.xx "" "umount:" "unmount a file system." "" umount(2)
.xx "files." "pack, pcat," "unpack: compress and expand" "" pack(1)
.xx "times of a file." "touch:" "update access and modification" "" touch(1)
.xx "of programs." "make: maintain," "update, and regenerate groups" "" make(1)
.xx "" "lfind: linear search and" "update." "lsearch," lsearch(3C)
.xx "" "sync:" "update super-block." "" sync(2)
.xx "" "sync:" "update the super block." "" sync(1)
.xx "" "du: summarize disk" "usage." "" du(1)
.xx "" "stat: statistical network" "useful with graphical/" "" stat(1G)
.xx "" "id: print" "user and group IDs and names." "" id(1)
.xx "" "setuid, setgid: set" "user and group IDs." "" setuid(2)
.xx "" "crontab -" "user crontab file." "" crontab(1)
.xx "" "character login name of the" "user." "cuserid: get" cuserid(3S)
.xx "" "/getgid, getegid: get real" "user, effective user, real/" "" getuid(2)
.xx "" "environ:" "user environment." "" environ(5)
.xx "" "disk accounting data by" "user ID." "diskusg - generate" diskusg(1M)
.xx "" "ulimit: get and set" "user limits." "" ulimit(2)
.xx "" "logname: return login name of" "user." "" logname(3X)
.xx "" "/get real user, effective" "user, real group, and/" "" getuid(2)
.xx "" "become super-user or another" "user." "su:" su(1)
.xx "" "the utmp file of the current" "user." "/find the slot in" ttyslot(3C)
.xx "" "write: write to another" "user." "" write(1)
.xx "" "(variant of ex for casual" "users)." "edit: text editor" edit(1)
.xx "" "mail, rmail: send mail to" "users or read mail." "" mail(1)
.xx "" "wall: write to all" "users." "" wall(1M)
.xx "" "fuser: identify processes" "using a file or file/" "" fuser(1M)
.xx "statistics." "" "ustat: get file system" "" ustat(2)
.xx "" "gutil: graphical" "utilities." "" gutil(1G)
.xx "modification times." "" "utime: set file access and" "" utime(2)
.xx "" "utmp, wtmp:" "utmp and wtmp entry formats." "" utmp(4)
.xx "" "endutent, utmpname: access" "utmp file entry." "/setutent," getut(3C)
.xx "" "ttyslot: find the slot in the" "utmp file of the current user." "" ttyslot(3C)
.xx "entry formats." "" "utmp, wtmp: utmp and wtmp" "" utmp(4)
.xx "" "/pututline, setutent, endutent," "utmpname: access utmp file/" "" getut(3C)
.xx "clean-up." "" "uuclean: uucp spool directory" "" uuclean(1M)
.xx "" "uusub: monitor" "uucp network." "" uusub(1M)
.xx "" "uuclean:" "uucp spool directory clean-up." "" uuclean(1M)
.xx "control." "uustat:" "uucp status inquiry and job" "" uustat(1C)
.xx "system to UNIX system copy." "" "uucp, uulog, uuname: UNIX" "" uucp(1C)
.xx "UNIX system copy." "uucp," "uulog, uuname: UNIX system to" "" uucp(1C)
.xx "system copy." "uucp, uulog," "uuname: UNIX system to UNIX" "" uucp(1C)
.xx "system file copy." "uuto," "uupick: public UNIX-to-UNIX" "" uuto(1C)
.xx "and job control." "" "uustat: uucp status inquiry" "" uustat(1C)
.xx "" "" "uusub: monitor uucp network." "" uusub(1M)
.xx "UNIX-to-UNIX system file/" "" "uuto, uupick: public" "" uuto(1C)
.xx "command execution." "" "uux: UNIX-to-UNIX system" "" uux(1C)
.xx "" "/files from UNIX system" "V executable files.." "" 5toG(1M)
.xx "" "" "val: validate SCCS file." "" val(1)
.xx "" "val:" "validate SCCS file." "" val(1)
.xx "" "/u3b, u3b5, vax: provide truth" "value about your processor/" "" machid(1)
.xx "" "abs: return integer absolute" "value." "" abs(3C)
.xx "" "cabs, zabs: FORTRAN absolute" "value." "abs, iabs, dabs," abs(3F)
.xx "" "getenv: return" "value for environment name." "" getenv(3C)
.xx "" "ceiling, remainder, absolute" "value functions." "/fabs: floor," floor(3M)
.xx "" "putenv: change or add" "value to environment." "" putenv(3C)
.xx "values." "" "values: machine-dependent" "" values(5)
.xx "" "true, false: provide truth" "values." "" true(1)
.xx "" "values: machine-dependent" "values." "" values(5)
.xx "" "/print formatted output of a" "varargs argument list." "" vprintf(3S)
.xx "" "/print formatted output of a" "varargs argument list." "" vprintf(3X)
.xx "argument list." "" "varargs: handle variable" "" varargs(5)
.xx "" "varargs: handle" "variable argument list." "" varargs(5)
.xx "" "return FORTRAN environment" "variable." "getenv:" getenv(3F)
.xx "users)." "edit: text editor" "(variant of ex for casual" "" edit(1)
.xx "" "ns16000, pdp11, u3b, u3b5," "vax: provide truth value about/" "" machid(1)
.xx "" "" "vc: version control." "" vc(1)
.xx "" "option letter from argument" "vector." "getopt: get" getopt(3C)
.xx "" "assert:" "verify program assertion." "" assert(3X)
.xx "" "vc:" "version control." "" vc(1)
.xx "" "get: get a" "version of an SCCS file." "" get(1)
.xx "" "sccsdiff: compare two" "versions of an SCCS file." "" sccsdiff(1)
.xx "formatted output of/" "vprintf," "vfprintf, vsprintf: print" "" vprintf(3S)
.xx "formatted output of/" "vprintf," "vfprintf, vsprintf: print" "" vprintf(3X)
.xx "display editor based on ex." "" "vi: screen-oriented (visual)" "" vi(1)
.xx "on ex." "vi: screen-oriented" "(visual) display editor based" "" vi(1)
.xx "systems with label checking." "" "volcopy, labelit: copy file" "" volcopy(1M)
.xx "" "file system: format of system" "volume." "" fs(4)
.xx "print formatted output of a/" "" "vprintf, vfprintf, vsprintf:" "" vprintf(3S)
.xx "print formatted output of a/" "" "vprintf, vfprintf, vsprintf:" "" vprintf(3X)
.xx "output of/" "vprintf, vfprintf," "vsprintf: print formatted" "" vprintf(3S)
.xx "output of/" "vprintf, vfprintf," "vsprintf: print formatted" "" vprintf(3X)
.xx "process." "" "wait: await completion of" "" wait(1)
.xx "or terminate." "wait:" "wait for child process to stop" "" wait(2)
.xx "to stop or terminate." "" "wait: wait for child process" "" wait(2)
.xx "" "ftw:" "walk a file tree." "" ftw(3C)
.xx "" "" "wall: write to all users." "" wall(1M)
.xx "" "" "wc: word count." "" wc(1)
.xx "" "" "what: identify SCCS files." "" what(1)
.xx "signal." "signal: specify" "what to do upon receipt of a" "" signal(2)
.xx "" "whodo:" "who is doing what." "" whodo(1M)
.xx "" "who:" "who is on the system." "" who(1)
.xx "" "" "who: who is on the system." "" who(1)
.xx "" "" "whodo: who is doing what." "" whodo(1M)
.xx "" "cd: change" "working directory." "" cd(1)
.xx "" "chdir: change" "working directory." "" chdir(2)
.xx "" "get path-name of current" "working directory." "getcwd:" getcwd(3C)
.xx "" "pwd:" "working directory name." "" pwd(1)
.xx "" "write:" "write on a file." "" write(2)
.xx "" "putpwent:" "write password file entry." "" putpwent(3C)
.xx "" "wall:" "write to all users." "" wall(1M)
.xx "" "write:" "write to another user." "" write(1)
.xx "" "" "write: write on a file." "" write(2)
.xx "" "" "write: write to another user." "" write(1)
.xx "" "open: open for reading or" "writing." "" open(2)
.xx "" "utmp, wtmp: utmp and" "wtmp entry formats." "" utmp(4)
.xx "formats." "utmp," "wtmp: utmp and wtmp entry" "" utmp(4)
.xx "accounting records." "fwtmp," "wtmpfix: manipulate connect" "" fwtmp(1M)
.xx "hunt-the-wumpus." "" "wump: the game of" "" wump(6)
.xx "list(s) and execute command." "" "xargs: construct argument" "" xargs(1)
.xx "FORTRAN bitwise/" "and, or," "xor, not, lshift, rshift:" "" bool(3F)
.xx "" "j0, j1, jn," "y0, y1, yn: Bessel functions." "" bessel(3M)
.xx "" "j0, j1, jn, y0," "y1, yn: Bessel functions." "" bessel(3M)
.xx "compiler-compiler." "" "yacc: yet another" "" yacc(1)
.xx "" "j0, j1, jn, y0, y1," "yn: Bessel functions." "" bessel(3M)
.xx "" "abs, iabs, dabs, cabs," "zabs: FORTRAN absolute value." "" abs(3F)
.bp
