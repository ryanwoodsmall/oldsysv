.xx "formatted input." "scanf," "fscanf, sscanf: convert" "" scanf(3S)
.xx "" "of file systems processed by" "fsck." "checklist: list" checklist(4)
.xx "consistency check and/" "" "fsck, dfsck: file system" "" fsck(1M)
.xx "" "" "fsdb: file system debugger." "" fsdb(1M)
.xx "reposition a file pointer in/" "" "fseek, rewind, ftell:" "" fseek(3S)
.xx "text files." "" "fspec: format specification in" "" fspec(4)
.xx "ef\&l files." "" "fsplit: split f77, ratfor, or" "" fsplit(1)
.xx "" "stat," "fstat: get file status." "" stat(2)
.xx "pointer in a/" "fseek, rewind," "ftell: reposition a file" "" fseek(3S)
.xx "communication package." "" "ftok: standard interprocess" "" stdipc(3C)
.xx "" "" "ftw: walk a file tree." "" ftw(3C)
.xx "" "FORTRAN arccosine intrinsic" "function." "acos, dacos:" acos(3F)
.xx "" "FORTRAN integer part intrinsic" "function." "aint, dint:" aint(3F)
.xx "error/" "erf, erfc: error" "function and complementary" "" erf(3M)
.xx "" "FORTRAN arcsine intrinsic" "function." "asin, dasin:" asin(3F)
.xx "" "FORTRAN arctangent intrinsic" "function." "atan2, datan2:" atan2(3F)
.xx "" "FORTRAN arctangent intrinsic" "function." "atan, datan:" atan(3F)
.xx "" "complex conjugate intrinsic" "function." "/dconjg: FORTRAN" conjg(3F)
.xx "" "ccos: FORTRAN cosine intrinsic" "function." "cos, dcos," cos(3F)
.xx "" "hyperbolic cosine intrinsic" "function." "/dcosh: FORTRAN" cosh(3F)
.xx "" "precision product intrinsic" "function." "dprod: double" dprod(3F)
.xx "" "and complementary error" "function." "/error function" erf(3M)
.xx "" "FORTRAN exponential intrinsic" "function." "exp, dexp, cexp:" exp(3F)
.xx "" "gamma: log gamma" "function." "" gamma(3M)
.xx "" "hypot: Euclidean distance" "function." "" hypot(3M)
.xx "" "of a common object file" "function." "/line number entries" ldlread(3X)
.xx "" "common logarithm intrinsic" "function." "/dlog10: FORTRAN" log10(3F)
.xx "" "natural logarithm intrinsic" "function." "/dlog, clog: FORTRAN" log(3F)
.xx "" "matherr: error-handling" "function." "" matherr(3M)
.xx "" "prof: profile within a" "function." "" prof(5)
.xx "" "transfer-of-sign intrinsic" "function." "/dsign: FORTRAN" sign(3F)
.xx "" "csin: FORTRAN sine intrinsic" "function." "sin, dsin," sin(3F)
.xx "" "hyperbolic sine intrinsic" "function." "/dsinh: FORTRAN" sinh(3F)
.xx "" "FORTRAN square root intrinsic" "function." "sqrt, dsqrt, csqrt:" sqrt(3F)
.xx "" "FORTRAN tangent intrinsic" "function." "tan, dtan:" tan(3F)
.xx "" "hyperbolic tangent intrinsic" "function." "/dtanh: FORTRAN" tanh(3F)
.xx "" "math: math" "functions and constants." "" math(5)
.xx "" "j0, j1, jn, y0, y1, yn: Bessel" "functions." "" bessel(3M)
.xx "" "FORTRAN bitwise Boolean" "functions." "/lshift, rshift:" bool(3F)
.xx "" "positive difference intrinsic" "functions." "dim, ddim, idim:" dim(3F)
.xx "" "logarithm, power, square root" "functions." "/sqrt: exponential," exp(3M)
.xx "" "remainder, absolute value" "functions." "/floor, ceiling," floor(3M)
.xx "" "dmax1: FORTRAN maximum-value" "functions." "/max1, amax1," max(3F)
.xx "" "dmin1: FORTRAN minimum-value" "functions." "/min1, amin1," min(3F)
.xx "" "FORTRAN remaindering intrinsic" "functions." "mod, amod, dmod:" mod(3F)
.xx "" "300, 300s: handle special" "functions of DASI 300 and 300s/" "" 300(1)
.xx "" "hp: handle special" "functions of HP 2640 and/" "" hp(1)
.xx "terminal." "450: handle special" "functions of the DASI 450" "" 450(1)
.xx "" "FORTRAN nearest integer" "functions." "/nint, idnint:" round(3F)
.xx "" "sinh, cosh, tanh: hyperbolic" "functions." "" sinh(3M)
.xx "" "string comparison intrinsic" "functions." "/lgt, lle, llt:" strcmp(3F)
.xx "" "atan, atan2: trigonometric" "functions." "/tan, asin, acos," trig(3M)
.xx "using a file or file/" "" "fuser: identify processes" "" fuser(1M)
.xx "" "fread," "fwrite: binary input/output." "" fread(3S)
.xx "connect accounting records." "" "fwtmp, wtmpfix: manipulate" "" fwtmp(1M)
.xx "" "jotto: secret word" "game." "" jotto(6)
.xx "" "moo: guessing" "game." "" moo(6)
.xx "" "back: the" "game of backgammon." "" back(6)
.xx "" "bj: the" "game of black jack." "" bj(6)
.xx "" "craps: the" "game of craps." "" craps(6)
.xx "" "wump: the" "game of hunt-the-wumpus." "" wump(6)
.xx "" "intro: introduction to" "games." "" intro(6)
.xx "" "gamma: log" "gamma function." "" gamma(3M)
.xx "" "" "gamma: log gamma function." "" gamma(3M)
.xx "submit RJE jobs." "send," "gath: gather files and/or" "" send(1C)
.xx "jobs." "send, gath:" "gather files and/or submit RJE" "" send(1C)
.xx "number to string." "ecvt, fcvt," "gcvt: convert floating-point" "" ecvt(3C)
.xx "" "" "ged: graphical editor." "" ged(1G)
.xx "" "maze:" "generate a maze." "" maze(6)
.xx "" "abort:" "generate an IOT fault." "" abort(3C)
.xx "" "cflow\-" "generate C flow graph." "" cflow(1)
.xx "cross-reference." "cxref:" "generate C program" "" cxref(1)
.xx "by user ID." "diskusg -" "generate disk accounting data" "" diskusg(1M)
.xx "" "makekey:" "generate encryption key." "" makekey(1)
.xx "terminal." "ctermid:" "generate file name for" "" ctermid(3S)
.xx "" "ncheck:" "generate names from i-numbers." "" ncheck(1M)
.xx "lexical tasks." "lex:" "generate programs for simple" "" lex(1)
.xx "" "/srand48, seed48, lcong48:" "generate uniformly distributed/" "" drand48(3C)
.xx "" "srand: simple random-number" "generator." "rand," rand(3C)
.xx "" "rand, srand: random number" "generator." "irand," rand(3F)
.xx "" "gets, fgets:" "get a string from a stream." "" gets(3S)
.xx "" "get:" "get a version of an SCCS file." "" get(1)
.xx "" "ulimit:" "get and set user limits." "" ulimit(2)
.xx "the user." "cuserid:" "get character login name of" "" cuserid(3S)
.xx "" "getc, getchar, fgetc, getw:" "get character or word from a/" "" getc(3S)
.xx "" "nlist:" "get entries from name list." "" nlist(3C)
.xx "" "umask: set and" "get file creation mask." "" umask(2)
.xx "" "stat, fstat:" "get file status." "" stat(2)
.xx "" "ustat:" "get file system statistics." "" ustat(2)
.xx "file." "" "get: get a version of an SCCS" "" get(1)
.xx "" "/setgrent, endgrent, fgetgrent:" "get group file entry." "" getgrent(3C)
.xx "" "getlogin:" "get login name." "" getlogin(3C)
.xx "" "logname:" "get login name." "" logname(1)
.xx "" "msgget:" "get message queue." "" msgget(2)
.xx "" "getpw:" "get name from UID." "" getpw(3C)
.xx "system." "uname:" "get name of current UNIX" "" uname(2)
.xx "" "unget: undo a previous" "get of an SCCS file." "" unget(1)
.xx "argument vector." "getopt:" "get option letter from" "" getopt(3C)
.xx "" "/setpwent, endpwent, fgetpwent:" "get password file entry." "" getpwent(3C)
.xx "working directory." "getcwd:" "get path-name of current" "" getcwd(3C)
.xx "times." "times:" "get process and child process" "" times(2)
.xx "and/" "getpid, getpgrp, getppid:" "get process, process group," "" getpid(2)
.xx "" "/geteuid, getgid, getegid:" "get real user, effective user,/" "" getuid(2)
.xx "" "semget:" "get set of semaphores." "" semget(2)
.xx "" "shmget:" "get shared memory segment." "" shmget(2)
.xx "" "tty:" "get the name of the terminal." "" tty(1)
.xx "" "time:" "get time." "" time(2)
.xx "command-line argument." "" "getarg: return FORTRAN" "" getarg(3F)
.xx "get character or word from a/" "" "getc, getchar, fgetc, getw:" "" getc(3S)
.xx "character or word from/" "getc," "getchar, fgetc, getw: get" "" getc(3S)
.xx "current working directory." "" "getcwd: get path-name of" "" getcwd(3C)
.xx "" "getuid, geteuid, getgid," "getegid: get real user,/" "" getuid(2)
.xx "environment variable." "" "getenv: return FORTRAN" "" getenv(3F)
.xx "environment name." "" "getenv: return value for" "" getenv(3C)
.xx "real user, effective/" "getuid," "geteuid, getgid, getegid: get" "" getuid(2)
.xx "user,/" "getuid, geteuid," "getgid, getegid: get real" "" getuid(2)
.xx "setgrent, endgrent,/" "" "getgrent, getgrgid, getgrnam," "" getgrent(3C)
.xx "endgrent,/" "getgrent," "getgrgid, getgrnam, setgrent," "" getgrent(3C)
.xx "" "getgrent, getgrgid," "getgrnam, setgrent, endgrent,/" "" getgrent(3C)
.xx "" "" "getlogin: get login name." "" getlogin(3C)
.xx "argument vector." "" "getopt: get option letter from" "" getopt(3C)
.xx "" "" "getopt: parse command options." "" getopt(1)
.xx "" "" "getpass: read a password." "" getpass(3C)
.xx "process group, and/" "getpid," "getpgrp, getppid: get process," "" getpid(2)
.xx "process, process group, and/" "" "getpid, getpgrp, getppid: get" "" getpid(2)
.xx "group, and/" "getpid, getpgrp," "getppid: get process, process" "" getpid(2)
.xx "" "" "getpw: get name from UID." "" getpw(3C)
.xx "setpwent, endpwent,/" "" "getpwent, getpwuid, getpwnam," "" getpwent(3C)
.xx "" "getpwent, getpwuid," "getpwnam, setpwent, endpwent,/" "" getpwent(3C)
.xx "endpwent,/" "getpwent," "getpwuid, getpwnam, setpwent," "" getpwent(3C)
.xx "a stream." "" "gets, fgets: get a string from" "" gets(3S)
.xx "" "and terminal settings used by" "getty." "gettydefs: speed" gettydefs(4)
.xx "modes, speed, and line/" "" "getty: set terminal type," "" getty(1M)
.xx "" "ct: spawn" "getty to a remote terminal." "" ct(1C)
.xx "settings used by getty." "" "gettydefs: speed and terminal" "" gettydefs(4)
.xx "getegid: get real user,/" "" "getuid, geteuid, getgid," "" getuid(2)
.xx "pututline, setutent,/" "" "getutent, getutid, getutline," "" getut(3C)
.xx "setutent, endutent,/" "getutent," "getutid, getutline, pututline," "" getut(3C)
.xx "setutent,/" "getutent, getutid," "getutline, pututline," "" getut(3C)
.xx "from a/" "getc, getchar, fgetc," "getw: get character or word" "" getc(3S)
.xx "convert/" "ctime, localtime," "gmtime, asctime, tzset:" "" ctime(3C)
.xx "" "setjmp, longjmp: non-local" "goto." "" setjmp(3C)
.xx "string, format of graphical/" "" "gps: graphical primitive" "" gps(4)
.xx "" "cflow\- generate C flow" "graph." "" cflow(1)
.xx "" "" "graph: draw a graph." "" graph(1G)
.xx "" "graph: draw a" "graph." "" graph(1G)
.xx "" "sag: system activity" "graph." "" sag(1G)
.xx "commands." "graphics: access" "graphical and numerical" "" graphics(1G)
.xx "" "/network useful with" "graphical commands." "" stat(1G)
.xx "" "/erase, hardcopy, tekset, td:" "graphical device routines and/" "" gdev(1G)
.xx "" "ged:" "graphical editor." "" ged(1G)
.xx "" "primitive string, format of" "graphical files." "/graphical" gps(4)
.xx "format of graphical/" "gps:" "graphical primitive string," "" gps(4)
.xx "routines." "toc:" "graphical table of contents" "" toc(1G)
.xx "" "gutil:" "graphical utilities." "" gutil(1G)
.xx "numerical commands." "" "graphics: access graphical and" "" graphics(1G)
.xx "" "tplot:" "graphics filters." "" tplot(1G)
.xx "" "plot:" "graphics interface." "" plot(4)
.xx "subroutines." "plot:" "graphics interface" "" plot(3X)
.xx "" "" "greek: select terminal filter." "" greek(1)
.xx "file for a pattern." "" "grep, egrep, fgrep: search a" "" grep(1)
.xx "" "/user, effective user, real" "group, and effective group/" "" getuid(2)
.xx "" "/getppid: get process, process" "group, and parent process IDs." "" getpid(2)
.xx "" "chown, chgrp: change owner or" "group." "" chown(1)
.xx "" "endgrent, fgetgrent: get" "group file entry." "/setgrent," getgrent(3C)
.xx "" "group:" "group file." "" group(4)
.xx "" "" "group: group file." "" group(4)
.xx "" "setpgrp: set process" "group ID." "" setpgrp(2)
.xx "" "id: print user and" "group IDs and names." "" id(1)
.xx "" "real group, and effective" "group IDs." "/effective user," getuid(2)
.xx "" "setuid, setgid: set user and" "group IDs." "" setuid(2)
.xx "" "newgrp: log in to a new" "group." "" newgrp(1)
.xx "" "chown: change owner and" "group of a file." "" chown(2)
.xx "" "a signal to a process or a" "group of processes." "/send" kill(2)
.xx "" "update, and regenerate" "groups of programs." "/maintain," make(1)
.xx "checkers." "pwck," "grpck: password/group file" "" pwck(1M)
.xx "" "ssignal," "gsignal: software signals." "" ssignal(3C)
.xx "" "hangman:" "guess the word." "" hangman(6)
.xx "" "moo:" "guessing game." "" moo(6)
.xx "" "" "gutil: graphical utilities." "" gutil(1G)
.xx "DASI 300 and 300s/" "300, 300s:" "handle special functions of" "" 300(1)
.xx "2640 and 2621-series/" "hp:" "handle special functions of HP" "" hp(1)
.xx "the DASI 450 terminal." "450:" "handle special functions of" "" 450(1)
.xx "" "varargs:" "handle variable argument list." "" varargs(5)
.xx "package." "curses: CRT screen" "handling and optimization" "" curses(3X)
.xx "" "" "hangman: guess the word." "" hangman(6)
.xx "" "nohup: run a command immune to" "hangups and quits." "" nohup(1)
.xx "graphical device/" "hpd, erase," "hardcopy, tekset, td:" "" gdev(1G)
.xx "" "hcreate, hdestroy: manage" "hash search tables." "hsearch," hsearch(3C)
.xx "" "spell, hashmake, spellin," "hashcheck: find spelling/" "" spell(1)
.xx "" "crypt, encrypt: a one way" "hashing encryption algorithm." "" crypt(3C)
.xx "find spelling errors." "spell," "hashmake, spellin, hashcheck:" "" spell(1)
.xx "search tables." "hsearch," "hcreate, hdestroy: manage hash" "" hsearch(3C)
.xx "tables." "hsearch, hcreate," "hdestroy: manage hash search" "" hsearch(3C)
.xx "file." "scnhdr: section" "header for a common object" "" scnhdr(4)
.xx "files." "filehdr: file" "header for common object" "" filehdr(4)
.xx "file." "ldfhread: read the file" "header of a common object" "" ldfhread(3X)
.xx "" "/seek to the optional file" "header of a common object/" "" ldohseek(3X)
.xx "" "/read an indexed\/named section" "header of a common object/" "" ldshread(3X)
.xx "" "ldahread: read the archive" "header of a member of an/" "" ldahread(3X)
.xx "" "" "help: ask for help." "" help(1)
.xx "" "help: ask for" "help." "" help(1)
.xx "" "handle special functions of" "HP 2640 and 2621-series/" "hp:" hp(1)
.xx "archiver." "hpio:" "HP 2645A terminal tape file" "" hpio(1)
.xx "of HP 2640 and 2621-series/" "" "hp: handle special functions" "" hp(1)
.xx "td: graphical device routines/" "" "hpd, erase, hardcopy, tekset," "" gdev(1G)
.xx "file archiver." "" "hpio: HP 2645A terminal tape" "" hpio(1)
.xx "manage hash search tables." "" "hsearch, hcreate, hdestroy:" "" hsearch(3C)
.xx "" "wump: the game of" "hunt-the-wumpus." "" wump(6)
.xx "" "cosh, dcosh: FORTRAN" "hyperbolic cosine intrinsic/" "" cosh(3F)
.xx "" "sinh, cosh, tanh:" "hyperbolic functions." "" sinh(3M)
.xx "" "sinh, dsinh: FORTRAN" "hyperbolic sine intrinsic/" "" sinh(3F)
.xx "" "tanh, dtanh: FORTRAN" "hyperbolic tangent intrinsic/" "" tanh(3F)
.xx "" "" "hyphen: find hyphenated words." "" hyphen(1)
.xx "" "hyphen: find" "hyphenated words." "" hyphen(1)
.xx "function." "" "hypot: Euclidean distance" "" hypot(3M)
.xx "FORTRAN absolute value." "abs," "iabs, dabs, cabs, zabs:" "" abs(3F)
.xx "command line arguments." "" "iargc: return the number of" "" iargc(3F)
.xx "" "/sngl, dble, cmplx, dcmplx," "ichar, char: explicit FORTRAN/" "" ftype(3F)
.xx "" "disk accounting data by user" "ID." "diskusg - generate" diskusg(1M)
.xx "" "semaphore set or shared memory" "id." "/remove a message queue," ipcrm(1)
.xx "and names." "" "id: print user and group IDs" "" id(1)
.xx "" "setpgrp: set process group" "ID." "" setpgrp(2)
.xx "" "issue: issue" "identification file." "" issue(4)
.xx "file or file/" "fuser:" "identify processes using a" "" fuser(1M)
.xx "" "what:" "identify SCCS files." "" what(1)
.xx "intrinsic/" "dim, ddim," "idim: positive difference" "" dim(3F)
.xx "dble, cmplx,/" "int, ifix," "idint, real, float, sngl," "" ftype(3F)
.xx "integer/" "anint, dnint, nint," "idnint: FORTRAN nearest" "" round(3F)
.xx "" "id: print user and group" "IDs and names." "" id(1)
.xx "" "group, and parent process" "IDs." "/get process, process" getpid(2)
.xx "" "group, and effective group" "IDs." "/effective user, real" getuid(2)
.xx "" "setgid: set user and group" "IDs." "setuid," setuid(2)
.xx "sngl, dble, cmplx,/" "int," "ifix, idint, real, float," "" ftype(3F)
.xx "" "core: format of core" "image file." "" core(4)
.xx "" "crash: examine system" "images." "" crash(1M)
.xx "" "pnch: file format for card" "images." "" pnch(4)
.xx "" "aimag, dimag: FORTRAN" "imaginary part of complex/" "" aimag(3F)
.xx "" "nohup: run a command" "immune to hangups and quits." "" nohup(1)
.xx "" "finc: fast" "incremental backup." "" finc(1M)
.xx "of a/" "ldtbindex: compute the" "index of a symbol table entry" "" ldtbindex(3X)
.xx "" "ptx: permuted" "index." "" ptx(1)
.xx "FORTRAN substring." "" "index: return location of" "" index(3F)
.xx "a common/" "ldtbread: read an" "indexed symbol table entry of" "" ldtbread(3X)
.xx "" "ldshread, ldnshread: read an" "indexed\/named section header/" "" ldshread(3X)
.xx "" "ldsseek, ldnsseek: seek to an" "indexed\/named section of a/" "" ldsseek(3X)
.xx "" "inittab: script for the" "init process." "" inittab(4)
.xx "initialization." "" "init, telinit: process control" "" init(1M)
.xx "" "init, telinit: process control" "initialization." "" init(1M)
.xx "" "/rc, powerfail: system" "initialization shell scripts." "" brc(1M)
.xx "process." "popen, pclose:" "initiate pipe to/from a" "" popen(3S)
.xx "process." "" "inittab: script for the init" "" inittab(4)
.xx "" "clri: clear" "i-node." "" clri(1M)
.xx "" "" "inode: format of an i-node." "" inode(4)
.xx "" "inode: format of an" "i-node." "" inode(4)
.xx "" "sscanf: convert formatted" "input." "scanf, fscanf," scanf(3S)
.xx "" "push character back into" "input stream." "ungetc:" ungetc(3S)
.xx "multiplexor." "sio - serial" "input/output asynchronous" "" sio(7)
.xx "" "fread, fwrite: binary" "input/output." "" fread(3S)
.xx "" "stdio: standard buffered" "input/output package." "" stdio(3S)
.xx "" "fileno: stream status" "inquiries." "/feof, clearerr," ferror(3S)
.xx "" "uustat: uucp status" "inquiry and job control." "" uustat(1C)
.xx "" "install:" "install commands." "" install(1M)
.xx "" "" "install: install commands." "" install(1M)
.xx "directories." "cpset:" "install object files in binary" "" cpset(1M)
.xx "sngl, dble, cmplx, dcmplx,/" "" "int, ifix, idint, real, float," "" ftype(3F)
.xx "" "abs: return" "integer absolute value." "" abs(3C)
.xx "" "/l64a: convert between long" "integer and base-64 ASCII/" "" a64l(3C)
.xx "" "sputl, sgetl: access long" "integer data in a/" "" sputl(3X)
.xx "" "nint, idnint: FORTRAN nearest" "integer functions." "/dnint," round(3F)
.xx "function." "aint, dint: FORTRAN" "integer part intrinsic" "" aint(3F)
.xx "" "atol, atoi: convert string to" "integer." "strtol," strtol(3C)
.xx "" "/ltol3: convert between 3-byte" "integers and long integers." "" l3tol(3C)
.xx "" "3-byte integers and long" "integers." "/convert between" l3tol(3C)
.xx "system." "mailx:" "interactive message processing" "" mailx(1)
.xx "" "system consistency check and" "interactive repair." "/file" fsck(1M)
.xx "" "rjestat: RJE status report and" "interactive status console." "" rjestat(1C)
.xx "" "err: error-logging" "interface." "" err(7)
.xx "" "plot: graphics" "interface." "" plot(4)
.xx "" "plot: graphics" "interface subroutines." "" plot(3X)
.xx "" "tc: streaming tape" "interface." "" tc(7)
.xx "" "termio: general terminal" "interface." "" termio(7)
.xx "" "tty: controlling terminal" "interface." "" tty(7)
.xx "" "spline:" "interpolate smooth curve." "" spline(1G)
.xx "characters." "asa:" "interpret ASA carriage control" "" asa(1)
.xx "" "sno: SNOBOL" "interpreter." "" sno(1)
.xx "" "pipe: create an" "interprocess channel." "" pipe(2)
.xx "facilities/" "ipcs: report" "inter-process communication" "" ipcs(1)
.xx "package." "ftok: standard" "interprocess communication" "" stdipc(3C)
.xx "" "suspend execution for an" "interval." "sleep:" sleep(1)
.xx "" "sleep: suspend execution for" "interval." "" sleep(3C)
.xx "" "acos, dacos: FORTRAN arccosine" "intrinsic function." "" acos(3F)
.xx "" "dint: FORTRAN integer part" "intrinsic function." "aint," aint(3F)
.xx "" "asin, dasin: FORTRAN arcsine" "intrinsic function." "" asin(3F)
.xx "" "datan2: FORTRAN arctangent" "intrinsic function." "atan2," atan2(3F)
.xx "" "datan: FORTRAN arctangent" "intrinsic function." "atan," atan(3F)
.xx "" "FORTRAN complex conjugate" "intrinsic function." "/dconjg:" conjg(3F)
.xx "" "dcos, ccos: FORTRAN cosine" "intrinsic function." "cos," cos(3F)
.xx "" "FORTRAN hyperbolic cosine" "intrinsic function." "/dcosh:" cosh(3F)
.xx "" "double precision product" "intrinsic function." "dprod:" dprod(3F)
.xx "" "cexp: FORTRAN exponential" "intrinsic function." "/dexp," exp(3F)
.xx "" "FORTRAN common logarithm" "intrinsic function." "/dlog10:" log10(3F)
.xx "" "FORTRAN natural logarithm" "intrinsic function." "/clog:" log(3F)
.xx "" "FORTRAN transfer-of-sign" "intrinsic function." "/dsign:" sign(3F)
.xx "" "sin, dsin, csin: FORTRAN sine" "intrinsic function." "" sin(3F)
.xx "" "dsinh: FORTRAN hyperbolic sine" "intrinsic function." "sinh," sinh(3F)
.xx "" "csqrt: FORTRAN square root" "intrinsic function." "/dsqrt," sqrt(3F)
.xx "" "tan, dtan: FORTRAN tangent" "intrinsic function." "" tan(3F)
.xx "" "FORTRAN hyperbolic tangent" "intrinsic function." "/dtanh:" tanh(3F)
.xx "" "idim: positive difference" "intrinsic functions." "/ddim," dim(3F)
.xx "" "dmod: FORTRAN remaindering" "intrinsic functions." "/amod," mod(3F)
.xx "" "lle, llt: string comparison" "intrinsic functions." "/lgt," strcmp(3F)
.xx "commands and application/" "" "intro: introduction to" "" intro(1)
.xx "formats." "" "intro: introduction to file" "" intro(4)
.xx "" "" "intro: introduction to games." "" intro(6)
.xx "miscellany." "" "intro: introduction to" "" intro(5)
.xx "files." "" "intro: introduction to special" "" intro(7)
.xx "subroutines and libraries." "" "intro: introduction to" "" intro(3)
.xx "calls and error numbers." "" "intro: introduction to system" "" intro(2)
.xx "maintenance commands and/" "" "intro: introduction to system" "" intro(1M)
.xx "maintenance procedures." "" "intro: introduction to system" "" intro(8)
.xx "application programs." "intro:" "introduction to commands and" "" intro(1)
.xx "" "intro:" "introduction to file formats." "" intro(4)
.xx "" "intro:" "introduction to games." "" intro(6)
.xx "" "intro:" "introduction to miscellany." "" intro(5)
.xx "" "intro:" "introduction to special files." "" intro(7)
.xx "and libraries." "intro:" "introduction to subroutines" "" intro(3)
.xx "and error numbers." "intro:" "introduction to system calls" "" intro(2)
.xx "maintenance commands/" "intro:" "introduction to system" "" intro(1M)
.xx "maintenance/" "intro:" "introduction to system" "" intro(8)
.xx "" "ncheck: generate names from" "i-numbers." "" ncheck(1M)
.xx "" "" "ioctl: control device." "" ioctl(2)
.xx "" "abort: generate an" "IOT fault." "" abort(3C)
.xx "semaphore set or shared/" "" "ipcrm: remove a message queue," "" ipcrm(1)
.xx "communication facilities/" "" "ipcs: report inter-process" "" ipcs(1)
.xx "number generator." "" "irand, rand, srand: random" "" rand(3F)
.xx "" "/islower, isdigit, isxdigit," "isalnum, isspace, ispunct,/" "" ctype(3C)
.xx "isdigit, isxdigit, isalnum,/" "" "isalpha, isupper, islower," "" ctype(3C)
.xx "" "/isprint, isgraph, iscntrl," "isascii: classify characters." "" ctype(3C)
.xx "terminal." "ttyname," "isatty: find name of a" "" ttyname(3C)
.xx "" "/ispunct, isprint, isgraph," "iscntrl, isascii: classify/" "" ctype(3C)
.xx "" "isalpha, isupper, islower," "isdigit, isxdigit, isalnum,/" "" ctype(3C)
.xx "" "/isspace, ispunct, isprint," "isgraph, iscntrl, isascii:/" "" ctype(3C)
.xx "transfer-of-sign/" "sign," "isign, dsign: FORTRAN" "" sign(3F)
.xx "isalnum,/" "isalpha, isupper," "islower, isdigit, isxdigit," "" ctype(3C)
.xx "" "/isalnum, isspace, ispunct," "isprint, isgraph, iscntrl,/" "" ctype(3C)
.xx "" "/isxdigit, isalnum, isspace," "ispunct, isprint, isgraph,/" "" ctype(3C)
.xx "" "/isdigit, isxdigit, isalnum," "isspace, ispunct, isprint,/" "" ctype(3C)
.xx "FORTRAN." "system:" "issue a shell command from" "" system(3F)
.xx "" "system:" "issue a shell command." "" system(3S)
.xx "" "issue:" "issue identification file." "" issue(4)
.xx "file." "" "issue: issue identification" "" issue(4)
.xx "isxdigit, isalnum,/" "isalpha," "isupper, islower, isdigit," "" ctype(3C)
.xx "" "/isupper, islower, isdigit," "isxdigit, isalnum, isspace,/" "" ctype(3C)
.xx "" "news: print news" "items." "" news(1)
.xx "functions." "" "j0, j1, jn, y0, y1, yn: Bessel" "" bessel(3M)
.xx "functions." "j0," "j1, jn, y0, y1, yn: Bessel" "" bessel(3M)
.xx "" "bj: the game of black" "jack." "" bj(6)
.xx "functions." "j0, j1," "jn, y0, y1, yn: Bessel" "" bessel(3M)
.xx "operator." "" "join: relational database" "" join(1)
.xx "" "" "jotto: secret word game." "" jotto(6)
.xx "" "/lrand48, nrand48, mrand48," "jrand48, srand48, seed48,/" "" drand48(3C)
.xx "" "makekey: generate encryption" "key." "" makekey(1)
.xx "" "killall:" "kill all active processes." "" killall(1M)
.xx "process or a group of/" "" "kill: send a signal to a" "" kill(2)
.xx "" "" "kill: terminate a process." "" kill(1)
.xx "processes." "" "killall: kill all active" "" killall(1M)
.xx "" "mem," "kmem: core memory." "" mem(7)
.xx "" "quiz: test your" "knowledge." "" quiz(6)
.xx "3-byte integers and long/" "" "l3tol, ltol3: convert between" "" l3tol(3C)
.xx "integer and base-64/" "a64l," "l64a: convert between long" "" a64l(3C)
.xx "" "copy file systems with" "label checking." "/labelit:" volcopy(1M)
.xx "with label checking." "volcopy," "labelit: copy file systems" "" volcopy(1M)
.xx "" "scanning and processing" "language." "awk: pattern" awk(1)
.xx "" "arbitrary-precision arithmetic" "language." "bc:" bc(1)
.xx "" "ef\&l: Extended FORTRAN" "Language." "" efl(1)
.xx "" "cpp: the C" "language preprocessor." "" cpp(1)
.xx "" "command programming" "language." "/standard/restricted" sh(1)
.xx "" "chargefee, ckpacct, dodisk," "lastlogin, monacct, nulladm,/" "" acctsh(1M)
.xx "" "shl: shell" "layer manager." "" shl(1)
.xx "" "/jrand48, srand48, seed48," "lcong48: generate uniformly/" "" drand48(3C)
.xx "object files." "" "ld: link editor for common" "" ld(1)
.xx "object file." "ldclose," "ldaclose: close a common" "" ldclose(3X)
.xx "header of a member of an/" "" "ldahread: read the archive" "" ldahread(3X)
.xx "file for reading." "ldopen," "ldaopen: open a common object" "" ldopen(3X)
.xx "common object file." "" "ldclose, ldaclose: close a" "" ldclose(3X)
.xx "of floating-point/" "frexp," "ldexp, modf: manipulate parts" "" frexp(3C)
.xx "access routines." "" "ldfcn: common object file" "" ldfcn(4)
.xx "of a common object file." "" "ldfhread: read the file header" "" ldfhread(3X)
.xx "name for common object file/" "" "ldgetname: retrieve symbol" "" ldgetname(3X)
.xx "line number entries/" "ldlread," "ldlinit, ldlitem: manipulate" "" ldlread(3X)
.xx "number/" "ldlread, ldlinit," "ldlitem: manipulate line" "" ldlread(3X)
.xx "manipulate line number/" "" "ldlread, ldlinit, ldlitem:" "" ldlread(3X)
.xx "line number entries of a/" "" "ldlseek, ldnlseek: seek to" "" ldlseek(3X)
.xx "entries of a section/" "ldlseek," "ldnlseek: seek to line number" "" ldlseek(3X)
.xx "entries of a section/" "ldrseek," "ldnrseek: seek to relocation" "" ldrseek(3X)
.xx "indexed\/named/" "ldshread," "ldnshread: read an" "" ldshread(3X)
.xx "indexed\/named/" "ldsseek," "ldnsseek: seek to an" "" ldsseek(3X)
.xx "file header of a common/" "" "ldohseek: seek to the optional" "" ldohseek(3X)
.xx "object file for reading." "" "ldopen, ldaopen: open a common" "" ldopen(3X)
.xx "relocation entries of a/" "" "ldrseek, ldnrseek: seek to" "" ldrseek(3X)
.xx "indexed\/named section header/" "" "ldshread, ldnshread: read an" "" ldshread(3X)
.xx "indexed\/named section of a/" "" "ldsseek, ldnsseek: seek to an" "" ldsseek(3X)
.xx "of a symbol table entry of a/" "" "ldtbindex: compute the index" "" ldtbindex(3X)
.xx "symbol table entry of a/" "" "ldtbread: read an indexed" "" ldtbread(3X)
.xx "table of a common object/" "" "ldtbseek: seek to the symbol" "" ldtbseek(3X)
.xx "string." "" "len: return length of FORTRAN" "" len(3F)
.xx "" "len: return" "length of FORTRAN string." "" len(3F)
.xx "" "getopt: get option" "letter from argument vector." "" getopt(3C)
.xx "simple lexical tasks." "" "lex: generate programs for" "" lex(1)
.xx "" "generate programs for simple" "lexical tasks." "lex:" lex(1)
.xx "update." "lsearch," "lfind: linear search and" "" lsearch(3C)
.xx "comparison intrinsic/" "" "lge, lgt, lle, llt: string" "" strcmp(3F)
.xx "comparison intrinsic/" "lge," "lgt, lle, llt: string" "" strcmp(3F)
.xx "" "to subroutines and" "libraries." "/introduction" intro(3)
.xx "" "relation for an object" "library." "/find ordering" lorder(1)
.xx "portable/" "ar: archive and" "library maintainer for" "" ar(1)
.xx "" "ulimit: get and set user" "limits." "" ulimit(2)
.xx "" "return the number of command" "line arguments." "iargc:" iargc(3F)
.xx "" "an out-going terminal" "line connection." "/establish" dial(3C)
.xx "" "type, modes, speed, and" "line discipline." "/set terminal" getty(1M)
.xx "" "line: read one" "line." "" line(1)
.xx "common object file." "linenum:" "line number entries in a" "" linenum(4)
.xx "" "/ldlinit, ldlitem: manipulate" "line number entries of a/" "" ldlread(3X)
.xx "" "ldlseek, ldnlseek: seek to" "line number entries of a/" "" ldlseek(3X)
.xx "" "strip: strip symbol and" "line number information from a/" "" strip(1)
.xx "" "nl:" "line numbering filter." "" nl(1)
.xx "" "out selected fields of each" "line of a file." "cut: cut" cut(1)
.xx "" "send/cancel requests to an LP" "line printer." "lp, cancel:" lp(1)
.xx "" "lp:" "line printer." "" lp(7)
.xx "" "" "line: read one line." "" line(1)
.xx "" "lsearch, lfind:" "linear search and update." "" lsearch(3C)
.xx "" "col: filter reverse" "line-feeds." "" col(1)
.xx "in a common object file." "" "linenum: line number entries" "" linenum(4)
.xx "files." "comm: select or reject" "lines common to two sorted" "" comm(1)
.xx "" "uniq: report repeated" "lines in a file." "" uniq(1)
.xx "" "of several files or subsequent" "lines of one file." "/same lines" paste(1)
.xx "subsequent/" "paste: merge same" "lines of several files or" "" paste(1)
.xx "" "link, unlink: exercise" "link and unlink system calls." "" link(1M)
.xx "files." "ld:" "link editor for common object" "" ld(1)
.xx "" "a.out: common assembler and" "link editor output." "" a.out(4)
.xx "" "" "link: link to a file." "" link(2)
.xx "" "cp, ln, mv: copy," "link or move files." "" cp(1)
.xx "" "link:" "link to a file." "" link(2)
.xx "and unlink system calls." "" "link, unlink: exercise link" "" link(1M)
.xx "" "" "lint: a C program checker." "" lint(1)
.xx "" "ls:" "list contents of directory." "" ls(1)
.xx "for a file system." "f\&f:" "list file names and statistics" "" ff(1M)
.xx "" "nlist: get entries from name" "list." "" nlist(3C)
.xx "" "nm: print name" "list of common object file." "" nm(1)
.xx "by fsck." "checklist:" "list of file systems processed" "" checklist(4)
.xx "" "handle variable argument" "list." "varargs:" varargs(5)
.xx "" "output of a varargs argument" "list." "/print formatted" vprintf(3S)
.xx "" "output of a varargs argument" "list." "/print formatted" vprintf(3X)
.xx "" "xargs: construct argument" "list(s) and execute command." "" xargs(1)
.xx "intrinsic/" "lge, lgt," "lle, llt: string comparison" "" strcmp(3F)
.xx "intrinsic/" "lge, lgt, lle," "llt: string comparison" "" strcmp(3F)
.xx "files." "cp," "ln, mv: copy, link or move" "" cp(1)
.xx "tzset: convert date/" "ctime," "localtime, gmtime, asctime," "" ctime(3C)
.xx "" "index: return" "location of FORTRAN substring." "" index(3F)
.xx "" "end, etext, edata: last" "locations in program." "" end(3C)
.xx "memory." "plock:" "lock process, text, or data in" "" plock(2)
.xx "natural logarithm intrinsic/" "" "log, alog, dlog, clog: FORTRAN" "" log(3F)
.xx "" "gamma:" "log gamma function." "" gamma(3M)
.xx "" "newgrp:" "log in to a new group." "" newgrp(1)
.xx "exponential, logarithm,/" "exp," "log, log10, pow, sqrt:" "" exp(3M)
.xx "common logarithm intrinsic/" "" "log10, alog10, dlog10: FORTRAN" "" log10(3F)
.xx "logarithm, power,/" "exp, log," "log10, pow, sqrt: exponential," "" exp(3M)
.xx "" "/alog10, dlog10: FORTRAN common" "logarithm intrinsic function." "" log10(3F)
.xx "" "/dlog, clog: FORTRAN natural" "logarithm intrinsic function." "" log(3F)
.xx "" "/log10, pow, sqrt: exponential," "logarithm, power, square root/" "" exp(3M)
.xx "" "errpt: process a report of" "logged errors." "" errpt(1M)
.xx "" "getlogin: get" "login name." "" getlogin(3C)
.xx "" "logname: get" "login name." "" logname(1)
.xx "" "cuserid: get character" "login name of the user." "" cuserid(3S)
.xx "" "logname: return" "login name of user." "" logname(3X)
.xx "" "passwd: change" "login password." "" passwd(1)
.xx "" "" "login: sign on." "" login(1)
.xx "" "setting up an environment at" "login time." "profile:" profile(4)
.xx "" "" "logname: get login name." "" logname(1)
.xx "user." "" "logname: return login name of" "" logname(3X)
.xx "" "a64l, l64a: convert between" "long integer and base-64 ASCII/" "" a64l(3C)
.xx "" "sputl, sgetl: access" "long integer data in a/" "" sputl(3X)
.xx "" "between 3-byte integers and" "long integers." "/ltol3: convert" l3tol(3C)
.xx "" "setjmp," "longjmp: non-local goto." "" setjmp(3C)
.xx "for an object library." "" "lorder: find ordering relation" "" lorder(1)
.xx "" "nice: run a command at" "low priority." "" nice(1)
.xx "requests to an LP line/" "" "lp, cancel: send/cancel" "" lp(1)
.xx "" "send/cancel requests to an" "LP line printer." "lp, cancel:" lp(1)
.xx "" "" "lp: line printer." "" lp(7)
.xx "" "disable: enable/disable" "LP printers." "enable," enable(1)
.xx "" "/lpshut, lpmove: start/stop the" "LP request scheduler and move/" "" lpsched(1M)
.xx "" "accept, reject: allow/prevent" "LP requests." "" accept(1M)
.xx "" "lpadmin: configure the" "LP spooling system." "" lpadmin(1M)
.xx "" "lpstat: print" "LP status information." "" lpstat(1)
.xx "spooling system." "" "lpadmin: configure the LP" "" lpadmin(1M)
.xx "request/" "lpsched, lpshut," "lpmove: start/stop the LP" "" lpsched(1M)
.xx "start/stop the LP request/" "" "lpsched, lpshut, lpmove:" "" lpsched(1M)
.xx "LP request scheduler/" "lpsched," "lpshut, lpmove: start/stop the" "" lpsched(1M)
.xx "information." "" "lpstat: print LP status" "" lpstat(1)
.xx "jrand48,/" "drand48, erand48," "lrand48, nrand48, mrand48," "" drand48(3C)
.xx "directory." "" "ls: list contents of" "" ls(1)
.xx "and update." "" "lsearch, lfind: linear search" "" lsearch(3C)
.xx "pointer." "" "lseek: move read/write file" "" lseek(2)
.xx "bitwise/" "and, or, xor, not," "lshift, rshift: FORTRAN" "" bool(3F)
.xx "integers and long/" "l3tol," "ltol3: convert between 3-byte" "" l3tol(3C)
.xx "" "" "m4: macro processor." "" m4(1)
.xx "" "values:" "machine-dependent values." "" values(5)
.xx "" "/access long integer data in a" "machine-independent fashion.." "" sputl(3X)
.xx "" "m4:" "macro processor." "" m4(1)
.xx "" "send mail to users or read" "mail." "mail, rmail:" mail(1)
.xx "users or read mail." "" "mail, rmail: send mail to" "" mail(1)
.xx "" "mail, rmail: send" "mail to users or read mail." "" mail(1)
.xx "processing system." "" "mailx: interactive message" "" mailx(1)
.xx "" "malloc, free, realloc, calloc:" "main memory allocator." "" malloc(3C)
.xx "" "/mallopt, mallinfo: fast" "main memory allocator." "" malloc(3X)
.xx "regenerate groups of/" "make:" "maintain, update, and" "" make(1)
.xx "" "ar: archive and library" "maintainer for portable/" "" ar(1)
.xx "" "intro: introduction to system" "maintenance commands and/" "" intro(1M)
.xx "" "intro: introduction to system" "maintenance procedures." "" intro(8)
.xx "SCCS file." "delta:" "make a delta (change) to an" "" delta(1)
.xx "" "mkdir:" "make a directory." "" mkdir(1)
.xx "or ordinary file." "mknod:" "make a directory, or a special" "" mknod(2)
.xx "" "mktemp:" "make a unique file name." "" mktemp(3C)
.xx "regenerate groups of/" "" "make: maintain, update, and" "" make(1)
.xx "" "banner:" "make posters." "" banner(1)
.xx "key." "" "makekey: generate encryption" "" makekey(1)
.xx "" "/realloc, calloc, mallopt," "mallinfo: fast main memory/" "" malloc(3X)
.xx "main memory allocator." "" "malloc, free, realloc, calloc:" "" malloc(3C)
.xx "mallopt, mallinfo: fast main/" "" "malloc, free, realloc, calloc," "" malloc(3X)
.xx "" "malloc, free, realloc, calloc," "mallopt, mallinfo: fast main/" "" malloc(3X)
.xx "manual." "" "man: print entries in this" "" man(1)
.xx "" "/tfind, tdelete, twalk:" "manage binary search trees." "" tsearch(3C)
.xx "" "hsearch, hcreate, hdestroy:" "manage hash search tables." "" hsearch(3C)
.xx "" "shl: shell layer" "manager." "" shl(1)
.xx "records." "fwtmp, wtmpfix:" "manipulate connect accounting" "" fwtmp(1M)
.xx "of/" "ldlread, ldlinit, ldlitem:" "manipulate line number entries" "" ldlread(3X)
.xx "" "frexp, ldexp, modf:" "manipulate parts of/" "" frexp(3C)
.xx "" "mt: cartridge tape" "manipulating program." "" mt(1M)
.xx "" "man: print entries in this" "manual." "" man(1)
.xx "" "ascii:" "map of ASCII character set." "" ascii(5)
.xx "files." "diffmk:" "mark differences between" "" diffmk(1)
.xx "" "umask: set file-creation mode" "mask." "" umask(1)
.xx "" "set and get file creation" "mask." "umask:" umask(2)
.xx "table." "master:" "master device information" "" master(4)
.xx "information table." "" "master: master device" "" master(4)
.xx "" "regular expression compile and" "match routines." "regexp:" regexp(5)
.xx "" "math:" "math functions and constants." "" math(5)
.xx "constants." "" "math: math functions and" "" math(5)
.xx "function." "" "matherr: error-handling" "" matherr(3M)
.xx "dmax1: FORTRAN maximum-value/" "" "max, max0, amax0, max1, amax1," "" max(3F)
.xx "dmax1: FORTRAN/" "max," "max0, amax0, max1, amax1," "" max(3F)
.xx "" "max, max0, amax0," "max1, amax1, dmax1: FORTRAN/" "" max(3F)
.xx "" "/max1, amax1, dmax1: FORTRAN" "maximum-value functions." "" max(3F)
.xx "" "" "maze: generate a maze." "" maze(6)
.xx "" "maze: generate a" "maze." "" maze(6)
.xx "accounting." "" "mclock: return FORTRAN time" "" mclock(3F)
.xx "" "" "mem, kmem: core memory." "" mem(7)
.xx "memcpy, memset: memory/" "" "memccpy, memchr, memcmp," "" memory(3C)
.xx "memset: memory/" "memccpy," "memchr, memcmp, memcpy," "" memory(3C)
.xx "operations." "memccpy, memchr," "memcmp, memcpy, memset: memory" "" memory(3C)
.xx "" "memccpy, memchr, memcmp," "memcpy, memset: memory/" "" memory(3C)
.xx "" "free, realloc, calloc: main" "memory allocator." "malloc," malloc(3C)
.xx "" "mallopt, mallinfo: fast main" "memory allocator." "/calloc," malloc(3X)
.xx "" "shmctl: shared" "memory control operations." "" shmctl(2)
.xx "" "queue, semaphore set or shared" "memory id." "/remove a message" ipcrm(1)
.xx "" "mem, kmem: core" "memory." "" mem(7)
.xx "" "memcmp, memcpy, memset:" "memory operations." "/memchr," memory(3C)
.xx "" "shmop: shared" "memory operations." "" shmop(2)
.xx "" "lock process, text, or data in" "memory." "plock:" plock(2)
.xx "" "shmget: get shared" "memory segment." "" shmget(2)
.xx "" "/memchr, memcmp, memcpy," "memset: memory operations." "" memory(3C)
.xx "" "sort: sort and/or" "merge files." "" sort(1)
.xx "files." "acctmerg:" "merge or add total accounting" "" acctmerg(1M)
.xx "files or subsequent/" "paste:" "merge same lines of several" "" paste(1)
.xx "" "" "mesg: permit or deny messages." "" mesg(1)
.xx "" "msgctl:" "message control operations." "" msgctl(2)
.xx "" "msgop:" "message operations." "" msgop(2)
.xx "" "mailx: interactive" "message processing system." "" mailx(1)
.xx "" "msgget: get" "message queue." "" msgget(2)
.xx "or shared/" "ipcrm: remove a" "message queue, semaphore set" "" ipcrm(1)
.xx "" "mesg: permit or deny" "messages." "" mesg(1)
.xx "" "sys_nerr: system error" "messages." "/errno, sys_errlist," perror(3C)
.xx "dmin1: FORTRAN minimum-value/" "" "min, min0, amin0, min1, amin1," "" min(3F)
.xx "dmin1: FORTRAN/" "min," "min0, amin0, min1, amin1," "" min(3F)
.xx "" "min, min0, amin0," "min1, amin1, dmin1: FORTRAN/" "" min(3F)
.xx "" "/min1, amin1, dmin1: FORTRAN" "minimum-value functions." "" min(3F)
.xx "and commands." "" "mk: how to remake the system" "" mk(8)
.xx "" "" "mkdir: make a directory." "" mkdir(1)
.xx "" "" "mkfs: construct a file system." "" mkfs(1M)
.xx "" "" "mknod: build special file." "" mknod(1M)
.xx "special or ordinary file." "" "mknod: make a directory, or a" "" mknod(2)
.xx "partition tables.." "" "mkpt: change the disk" "" mkpt(1M)
.xx "name." "" "mktemp: make a unique file" "" mktemp(3C)
.xx "table." "" "mnttab: mounted file system" "" mnttab(4)
.xx "remaindering intrinsic/" "" "mod, amod, dmod: FORTRAN" "" mod(3F)
.xx "" "chmod: change" "mode." "" chmod(1)
.xx "" "umask: set file-creation" "mode mask." "" umask(1)
.xx "" "chmod: change" "mode of file." "" chmod(2)
.xx "" "getty: set terminal type," "modes, speed, and line/" "" getty(1M)
.xx "" "bs: a compiler/interpreter for" "modest-sized programs." "" bs(1)
.xx "floating-point/" "frexp, ldexp," "modf: manipulate parts of" "" frexp(3C)
.xx "" "touch: update access and" "modification times of a file." "" touch(1)
.xx "" "utime: set file access and" "modification times." "" utime(2)
.xx "" "/ckpacct, dodisk, lastlogin," "monacct, nulladm, prctmp,/" "" acctsh(1M)
.xx "UNIX/" "/B5toGR: creates ROM" "monitor executable files from" "" 5toG(1M)
.xx "profile." "" "monitor: prepare execution" "" monitor(3C)
.xx "" "uusub:" "monitor uucp network." "" uusub(1M)
.xx "" "" "moo: guessing game." "" moo(6)
.xx "" "mount:" "mount a file system." "" mount(2)
.xx "system." "mount, umount:" "mount and dismount file" "" mount(1M)
.xx "" "" "mount: mount a file system." "" mount(2)
.xx "" "setmnt: establish" "mount table." "" setmnt(1M)
.xx "dismount file system." "" "mount, umount: mount and" "" mount(1M)
.xx "" "mnttab:" "mounted file system table." "" mnttab(4)
.xx "" "mvdir:" "move a directory." "" mvdir(1M)
.xx "" "cp, ln, mv: copy, link or" "move files." "" cp(1)
.xx "" "lseek:" "move read/write file pointer." "" lseek(2)
.xx "" "the LP request scheduler and" "move requests." "/start/stop" lpsched(1M)
.xx "" "dc:" "moving-head disk." "" dc(7)
.xx "" "/erand48, lrand48, nrand48," "mrand48, jrand48, srand48,/" "" drand48(3C)
.xx "operations." "" "msgctl: message control" "" msgctl(2)
.xx "" "" "msgget: get message queue." "" msgget(2)
.xx "" "" "msgop: message operations." "" msgop(2)
.xx "manipulating program." "" "mt: cartridge tape" "" mt(1M)
.xx "" "input/output asynchronous" "multiplexor." "sio - serial" sio(7)
.xx "" "cp, ln," "mv: copy, link or move files." "" cp(1)
.xx "" "" "mvdir: move a directory." "" mvdir(1M)
.xx "" "log, alog, dlog, clog: FORTRAN" "natural logarithm intrinsic/" "" log(3F)
.xx "i-numbers." "" "ncheck: generate names from" "" ncheck(1M)
.xx "" "/dnint, nint, idnint: FORTRAN" "nearest integer functions." "" round(3F)
.xx "commands." "stat: statistical" "network useful with graphical" "" stat(1G)
.xx "" "uusub: monitor uucp" "network." "" uusub(1M)
.xx "a text file." "" "newform: change the format of" "" newform(1)
.xx "" "" "newgrp: log in to a new group." "" newgrp(1)
.xx "" "news: print" "news items." "" news(1)
.xx "" "" "news: print news items." "" news(1)
.xx "process." "" "nice: change priority of a" "" nice(2)
.xx "priority." "" "nice: run a command at low" "" nice(1)
.xx "integer/" "anint, dnint," "nint, idnint: FORTRAN nearest" "" round(3F)
.xx "" "" "nl: line numbering filter." "" nl(1)
.xx "list." "" "nlist: get entries from name" "" nlist(3C)
.xx "object file." "" "nm: print name list of common" "" nm(1)
.xx "hangups and quits." "" "nohup: run a command immune to" "" nohup(1)
.xx "" "setjmp, longjmp:" "non-local goto." "" setjmp(3C)
.xx "bitwise Boolean/" "and, or, xor," "not, lshift, rshift: FORTRAN" "" bool(3F)
.xx "" "drand48, erand48, lrand48," "nrand48, mrand48, jrand48,/" "" drand48(3C)
.xx "vax: provide truth value/" "" "ns16000, pdp11, u3b, u3b5," "" machid(1)
.xx "" "NSCops:" "NSC SYS32 console operations." "" nscops(8)
.xx "operations." "" "NSCops: NSC SYS32 console" "" nscops(8)
.xx "" "null: the" "null file." "" null(7)
.xx "" "" "null: the null file." "" null(7)
.xx "" "/dodisk, lastlogin, monacct," "nulladm, prctmp, prdaily,/" "" acctsh(1M)
.xx "" "nl: line" "numbering filter." "" nl(1)
.xx "" "graphics: access graphical and" "numerical commands." "" graphics(1G)
.xx "" "ldfcn: common" "object file access routines." "" ldfcn(4)
.xx "" "dump selected parts of an" "object file." "dump:" dump(1)
.xx "" "ldopen, ldaopen: open a common" "object file for reading." "" ldopen(3X)
.xx "" "number entries of a common" "object file function." "/line" ldlread(3X)
.xx "" "ldaclose: close a common" "object file." "ldclose," ldclose(3X)
.xx "" "the file header of a common" "object file." "ldfhread: read" ldfhread(3X)
.xx "" "of a section of a common" "object file." "/number entries" ldlseek(3X)
.xx "" "file header of a common" "object file." "/to the optional" ldohseek(3X)
.xx "" "of a section of a common" "object file." "/entries" ldrseek(3X)
.xx "" "section header of a common" "object file." "/indexed\/named" ldshread(3X)
.xx "" "section of a common" "object file." "/indexed\/named" ldsseek(3X)
.xx "" "symbol table entry of a common" "object file." "/the index of a" ldtbindex(3X)
.xx "" "symbol table entry of a common" "object file." "/read an indexed" ldtbread(3X)
.xx "" "the symbol table of a common" "object file." "/seek to" ldtbseek(3X)
.xx "" "number entries in a common" "object file." "linenum: line" linenum(4)
.xx "" "nm: print name list of common" "object file." "" nm(1)
.xx "" "information for a common" "object file." "/relocation" reloc(4)
.xx "" "section header for a common" "object file." "scnhdr:" scnhdr(4)
.xx "" "information from a common" "object file." "/and line number" strip(1)
.xx "entry." "/symbol name for common" "object file symbol table" "" ldgetname(3X)
.xx "format." "syms: common" "object file symbol table" "" syms(4)
.xx "" "file header for common" "object files." "filehdr:" filehdr(4)
.xx "directories." "cpset: install" "object files in binary" "" cpset(1M)
.xx "" "ld: link editor for common" "object files." "" ld(1)
.xx "" "print section sizes of common" "object files." "size:" size(1)
.xx "" "find ordering relation for an" "object library." "lorder:" lorder(1)
.xx "" "od:" "octal dump." "" od(1)
.xx "" "" "od: octal dump." "" od(1)
.xx "reading." "ldopen, ldaopen:" "open a common object file for" "" ldopen(3X)
.xx "" "fopen, freopen, fdopen:" "open a stream." "" fopen(3S)
.xx "" "dup: duplicate an" "open file descriptor." "" dup(2)
.xx "" "open:" "open for reading or writing." "" open(2)
.xx "writing." "" "open: open for reading or" "" open(2)
.xx "" "prf:" "operating system profiler." "" prf(7)
.xx "" "/prfdc, prfsnap, prfpr:" "operating system profiler." "" profiler(1M)
.xx "" "memcmp, memcpy, memset: memory" "operations." "memccpy, memchr," memory(3C)
.xx "" "msgctl: message control" "operations." "" msgctl(2)
.xx "" "msgop: message" "operations." "" msgop(2)
.xx "" "NSCops: NSC SYS32 console" "operations." "" nscops(8)
.xx "" "semctl: semaphore control" "operations." "" semctl(2)
.xx "" "semop: semaphore" "operations." "" semop(2)
.xx "" "shmctl: shared memory control" "operations." "" shmctl(2)
.xx "" "shmop: shared memory" "operations." "" shmop(2)
.xx "" "strcspn, strtok: string" "operations." "/strpbrk, strspn," string(3C)
.xx "" "join: relational database" "operator." "" join(1)
.xx "" "dcopy: copy file systems for" "optimal access time." "" dcopy(1M)
.xx "" "CRT screen handling and" "optimization package." "curses:" curses(3X)
.xx "vector." "getopt: get" "option letter from argument" "" getopt(3C)
.xx "common/" "ldohseek: seek to the" "optional file header of a" "" ldohseek(3X)
.xx "" "fcntl: file control" "options." "" fcntl(5)
.xx "" "stty: set the" "options for a terminal." "" stty(1)
.xx "" "getopt: parse command" "options." "" getopt(1)
.xx "FORTRAN bitwise Boolean/" "and," "or, xor, not, lshift, rshift:" "" bool(3F)
.xx "object library." "lorder: find" "ordering relation for an" "" lorder(1)
.xx "" "a directory, or a special or" "ordinary file." "mknod: make" mknod(2)
.xx "" "dial: establish an" "out-going terminal line/" "" dial(3C)
.xx "" "assembler and link editor" "output." "a.out: common" a.out(4)
.xx "" "/vsprintf: print formatted" "output of a varargs argument/" "" vprintf(3S)
.xx "" "/vsprintf: print formatted" "output of a varargs argument/" "" vprintf(3X)
.xx "" "sprintf: print formatted" "output." "printf, fprintf," printf(3S)
.xx "" "/acctdusg, accton, acctwtmp:" "overview of accounting and/" "" acct(1M)
.xx "" "chown: change" "owner and group of a file." "" chown(2)
.xx "" "chown, chgrp: change" "owner or group." "" chown(1)
.xx "and expand files." "" "pack, pcat, unpack: compress" "" pack(1)
.xx "" "handling and optimization" "package." "curses: CRT screen" curses(3X)
.xx "" "sadc: system activity report" "package." "sa1, sa2," sar(1M)
.xx "" "standard buffered input/output" "package." "stdio:" stdio(3S)
.xx "" "interprocess communication" "package." "ftok: standard" stdipc(3C)
.xx "4014 terminal." "4014:" "paginator for the TEKTRONIX" "" 4014(1)
.xx "" "process, process group, and" "parent process IDs." "/get" getpid(2)
.xx "" "getopt:" "parse command options." "" getopt(1)
.xx "" "mkpt: change the disk" "partition tables.." "" mkpt(1M)
.xx "" "" "passwd: change login password." "" passwd(1)
.xx "" "" "passwd: password file." "" passwd(4)
.xx "" "/endpwent, fgetpwent: get" "password file entry." "" getpwent(3C)
.xx "" "putpwent: write" "password file entry." "" putpwent(3C)
.xx "" "passwd:" "password file." "" passwd(4)
.xx "" "getpass: read a" "password." "" getpass(3C)
.xx "" "passwd: change login" "password." "" passwd(1)
.xx "" "pwck, grpck:" "password/group file checkers." "" pwck(1M)
.xx "several files or subsequent/" "" "paste: merge same lines of" "" paste(1)
.xx "" "dirname: deliver portions of" "path names." "basename," basename(1)
.xx "directory." "getcwd: get" "path-name of current working" "" getcwd(3C)
.xx "" "fgrep: search a file for a" "pattern." "grep, egrep," grep(1)
.xx "processing language." "awk:" "pattern scanning and" "" awk(1)
.xx "signal." "" "pause: suspend process until" "" pause(2)
.xx "expand files." "pack," "pcat, unpack: compress and" "" pack(1)
.xx "" "cc," "pcc: C compiler." "" cc(1)
.xx "a process." "popen," "pclose: initiate pipe to/from" "" popen(3S)
.xx "truth value about/" "ns16000," "pdp11, u3b, u3b5, vax: provide" "" machid(1)
.xx "" "mesg:" "permit or deny messages." "" mesg(1)
.xx "" "ptx:" "permuted index." "" ptx(1)
.xx "format." "acct:" "per-process accounting file" "" acct(4)
.xx "" "acctcms: command summary from" "per-process accounting/" "" acctcms(1M)
.xx "sys_nerr: system error/" "" "perror, errno, sys_errlist," "" perror(3C)
.xx "terminals." "pg: file" "perusal filter for soft-copy" "" pg(1)
.xx "soft-copy terminals." "" "pg: file perusal filter for" "" pg(1)
.xx "" "split: split a file into" "pieces." "" split(1)
.xx "channel." "" "pipe: create an interprocess" "" pipe(2)
.xx "" "tee:" "pipe fitting." "" tee(1)
.xx "" "popen, pclose: initiate" "pipe to/from a process." "" popen(3S)
.xx "data in memory." "" "plock: lock process, text, or" "" plock(2)
.xx "" "" "plot: graphics interface." "" plot(4)
.xx "subroutines." "" "plot: graphics interface" "" plot(3X)
.xx "images." "" "pnch: file format for card" "" pnch(4)
.xx "" "ftell: reposition a file" "pointer in a stream." "/rewind," fseek(3S)
.xx "" "lseek: move read/write file" "pointer." "" lseek(2)
.xx "to/from a process." "" "popen, pclose: initiate pipe" "" popen(3S)
.xx "" "and library maintainer for" "portable archives." "/archive" ar(1)
.xx "" "basename, dirname: deliver" "portions of path names." "" basename(1)
.xx "functions." "dim, ddim, idim:" "positive difference intrinsic" "" dim(3F)
.xx "" "banner: make" "posters." "" banner(1)
.xx "logarithm,/" "exp, log, log10," "pow, sqrt: exponential," "" exp(3M)
.xx "" "/sqrt: exponential, logarithm," "power, square root functions." "" exp(3M)
.xx "" "brc, bcheckrc, rc," "powerfail: system/" "" brc(1M)
.xx "" "" "pr: print files." "" pr(1)
.xx "" "/lastlogin, monacct, nulladm," "prctmp, prdaily, prtacct,/" "" acctsh(1M)
.xx "" "/monacct, nulladm, prctmp," "prdaily, prtacct, runacct,/" "" acctsh(1M)
.xx "function." "dprod: double" "precision product intrinsic" "" dprod(3F)
.xx "" "monitor:" "prepare execution profile." "" monitor(3C)
.xx "" "cpp: the C language" "preprocessor." "" cpp(1)
.xx "" "unget: undo a" "previous get of an SCCS file." "" unget(1)
.xx "profiler." "" "prf: operating system" "" prf(7)
.xx "operating/" "prfld, prfstat," "prfdc, prfsnap, prfpr:" "" profiler(1M)
.xx "prfsnap, prfpr: operating/" "" "prfld, prfstat, prfdc," "" profiler(1M)
.xx "" "/prfstat, prfdc, prfsnap," "prfpr: operating system/" "" profiler(1M)
.xx "system/" "prfld, prfstat, prfdc," "prfsnap, prfpr: operating" "" profiler(1M)
.xx "prfpr: operating/" "prfld," "prfstat, prfdc, prfsnap," "" profiler(1M)
.xx "graphical/" "gps: graphical" "primitive string, format of" "" gps(4)
.xx "" "types:" "primitive system data types." "" types(5)
.xx "" "prs:" "print an SCCS file." "" prs(1)
.xx "" "date:" "print and set the date." "" date(1)
.xx "" "cal:" "print calendar." "" cal(1)
.xx "of a file." "sum:" "print checksum and block count" "" sum(1)
.xx "editing activity." "sact:" "print current SCCS file" "" sact(1)
.xx "" "man:" "print entries in this manual." "" man(1)
.xx "" "cat: concatenate and" "print files." "" cat(1)
.xx "" "pr:" "print files." "" pr(1)
.xx "" "vprintf, vfprintf, vsprintf:" "print formatted output of a/" "" vprintf(3S)
.xx "" "vprintf, vfprintf, vsprintf:" "print formatted output of a/" "" vprintf(3X)
.xx "" "printf, fprintf, sprintf:" "print formatted output." "" printf(3S)
.xx "" "lpstat:" "print LP status information." "" lpstat(1)
.xx "object file." "nm:" "print name list of common" "" nm(1)
.xx "system." "uname:" "print name of current UNIX" "" uname(1)
.xx "" "news:" "print news items." "" news(1)
.xx "file(s)." "acctcom: search and" "print process accounting" "" acctcom(1)
.xx "object files." "size:" "print section sizes of common" "" size(1)
.xx "names." "id:" "print user and group IDs and" "" id(1)
.xx "" "requests to an LP line" "printer." "/cancel: send/cancel" lp(1)
.xx "" "lp: line" "printer." "" lp(7)
.xx "" "disable: enable/disable LP" "printers." "enable," enable(1)
.xx "print formatted output." "" "printf, fprintf, sprintf:" "" printf(3S)
.xx "" "nice: run a command at low" "priority." "" nice(1)
.xx "" "nice: change" "priority of a process." "" nice(2)
.xx "errors." "errpt:" "process a report of logged" "" errpt(1M)
.xx "" "acct: enable or disable" "process accounting." "" acct(2)
.xx "" "acctprc1, acctprc2:" "process accounting." "" acctprc(1M)
.xx "" "acctcom: search and print" "process accounting file(s)." "" acctcom(1)
.xx "" "alarm: set a" "process alarm clock." "" alarm(2)
.xx "times." "times: get" "process and child process" "" times(2)
.xx "" "init, telinit:" "process control/" "" init(1M)
.xx "" "timex: time a command; report" "process data and system/" "" timex(1)
.xx "" "exit, _exit: terminate" "process." "" exit(2)
.xx "" "fork: create a new" "process." "" fork(2)
.xx "" "/getpgrp, getppid: get process," "process group, and parent/" "" getpid(2)
.xx "" "setpgrp: set" "process group ID." "" setpgrp(2)
.xx "" "process group, and parent" "process IDs." "/get process," getpid(2)
.xx "" "inittab: script for the init" "process." "" inittab(4)
.xx "" "kill: terminate a" "process." "" kill(1)
.xx "" "nice: change priority of a" "process." "" nice(2)
.xx "" "kill: send a signal to a" "process or a group of/" "" kill(2)
.xx "" "initiate pipe to/from a" "process." "popen, pclose:" popen(3S)
.xx "" "getpid, getpgrp, getppid: get" "process, process group, and/" "" getpid(2)
.xx "" "ps: report" "process status." "" ps(1)
.xx "memory." "plock: lock" "process, text, or data in" "" plock(2)
.xx "" "times: get process and child" "process times." "" times(2)
.xx "" "wait: wait for child" "process to stop or terminate." "" wait(2)
.xx "" "ptrace:" "process trace." "" ptrace(2)
.xx "" "pause: suspend" "process until signal." "" pause(2)
.xx "" "wait: await completion of" "process." "" wait(1)
.xx "" "list of file systems" "processed by fsck." "checklist:" checklist(4)
.xx "" "to a process or a group of" "processes." "/send a signal" kill(2)
.xx "" "killall: kill all active" "processes." "" killall(1M)
.xx "structure." "fuser: identify" "processes using a file or file" "" fuser(1M)
.xx "" "awk: pattern scanning and" "processing language." "" awk(1)
.xx "" "shutdown: terminate all" "processing." "" shutdown(1M)
.xx "" "mailx: interactive message" "processing system." "" mailx(1)
.xx "" "m4: macro" "processor." "" m4(1)
.xx "" "provide truth value about your" "processor type." "/u3b5, vax:" machid(1)
.xx "" "dprod: double precision" "product intrinsic function." "" dprod(3F)
.xx "" "" "prof: display profile data." "" prof(1)
.xx "function." "" "prof: profile within a" "" prof(5)
.xx "profile." "" "profil: execution time" "" profil(2)
.xx "" "prof: display" "profile data." "" prof(1)
.xx "" "monitor: prepare execution" "profile." "" monitor(3C)
.xx "" "profil: execution time" "profile." "" profil(2)
.xx "environment at login time." "" "profile: setting up an" "" profile(4)
.xx "" "prof:" "profile within a function." "" prof(5)
.xx "" "prf: operating system" "profiler." "" prf(7)
.xx "" "prfpr: operating system" "profiler." "/prfdc, prfsnap," profiler(1M)
.xx "" "sadp: disk access" "profiler." "" sadp(1M)
.xx "" "standard/restricted command" "programming language." "/the" sh(1)
.xx "" "arithmetic:" "provide drill in number facts." "" arithmetic(6)
.xx "" "/pdp11, u3b, u3b5, vax:" "provide truth value about your/" "" machid(1)
.xx "" "true, false:" "provide truth values." "" true(1)
.xx "" "" "prs: print an SCCS file." "" prs(1)
.xx "" "/nulladm, prctmp, prdaily," "prtacct, runacct, shutacct,/" "" acctsh(1M)
.xx "" "" "ps: report process status." "" ps(1)
.xx "" "sxt:" "pseudo-device driver." "" sxt(7)
.xx "" "/generate uniformly distributed" "pseudo-random numbers." "" drand48(3C)
.xx "" "" "ptrace: process trace." "" ptrace(2)
.xx "" "" "ptx: permuted index." "" ptx(1)
.xx "stream." "ungetc:" "push character back into input" "" ungetc(3S)
.xx "put character or word on a/" "" "putc, putchar, fputc, putw:" "" putc(3S)
.xx "character or word on a/" "putc," "putchar, fputc, putw: put" "" putc(3S)
.xx "environment." "" "putenv: change or add value to" "" putenv(3C)
.xx "entry." "" "putpwent: write password file" "" putpwent(3C)
.xx "stream." "" "puts, fputs: put a string on a" "" puts(3S)
.xx "" "getutent, getutid, getutline," "pututline, setutent, endutent,/" "" getut(3C)
.xx "a/" "putc, putchar, fputc," "putw: put character or word on" "" putc(3S)
.xx "file checkers." "" "pwck, grpck: password/group" "" pwck(1M)
.xx "" "" "pwd: working directory name." "" pwd(1)
.xx "Survey." "" "qasurvey: Quality Assurance" "" qasurvey(1M)
.xx "" "" "qsort: quicker sort." "" qsort(3C)
.xx "" "qasurvey:" "Quality Assurance Survey." "" qasurvey(1M)
.xx "" "tput:" "query terminfo database." "" tput(1)
.xx "" "msgget: get message" "queue." "" msgget(2)
.xx "" "ipcrm: remove a message" "queue, semaphore set or shared/" "" ipcrm(1)
.xx "" "qsort:" "quicker sort." "" qsort(3C)
.xx "" "command immune to hangups and" "quits." "nohup: run a" nohup(1)
.xx "" "" "quiz: test your knowledge." "" quiz(6)
.xx "generator." "irand," "rand, srand: random number" "" rand(3F)
.xx "random-number generator." "" "rand, srand: simple" "" rand(3C)
.xx "" "irand, rand, srand:" "random number generator." "" rand(3F)
.xx "" "rand, srand: simple" "random-number generator." "" rand(3C)
.xx "" "fsplit: split f77," "ratfor, or ef\&l files." "" fsplit(1)
.xx "dialect." "" "ratfor: rational FORTRAN" "" ratfor(1)
.xx "" "ratfor:" "rational FORTRAN dialect." "" ratfor(1)
.xx "initialization/" "brc, bcheckrc," "rc, powerfail: system" "" brc(1M)
.xx "" "getpass:" "read a password." "" getpass(3C)
.xx "entry of a common/" "ldtbread:" "read an indexed symbol table" "" ldtbread(3X)
.xx "header/" "ldshread, ldnshread:" "read an indexed\/named section" "" ldshread(3X)
.xx "" "read:" "read from file." "" read(2)
.xx "" "rmail: send mail to users or" "read mail." "mail," mail(1)
.xx "" "line:" "read one line." "" line(1)
.xx "" "" "read: read from file." "" read(2)
.xx "member of an/" "ldahread:" "read the archive header of a" "" ldahread(3X)
.xx "common object file." "ldfhread:" "read the file header of a" "" ldfhread(3X)
.xx "" "open a common object file for" "reading." "ldopen, ldaopen:" ldopen(3X)
.xx "" "open: open for" "reading or writing." "" open(2)
.xx "" "lseek: move" "read/write file pointer." "" lseek(2)
.xx "cmplx,/" "int, ifix, idint," "real, float, sngl, dble," "" ftype(3F)
.xx "allocator." "malloc, free," "realloc, calloc: main memory" "" malloc(3C)
.xx "mallinfo: fast/" "malloc, free," "realloc, calloc, mallopt," "" malloc(3X)
.xx "" "specify what to do upon" "receipt of a signal." "signal:" signal(2)
.xx "" "/specify FORTRAN action on" "receipt of a system signal." "" signal(3F)
.xx "" "from per-process accounting" "records." "/command summary" acctcms(1M)
.xx "" "errdead: extract error" "records from dump." "" errdead(1M)
.xx "" "manipulate connect accounting" "records." "fwtmp, wtmpfix:" fwtmp(1M)
.xx "tape." "frec:" "recover files from a backup" "" frec(1M)
.xx "" "ed," "red: text editor." "" ed(1)
.xx "execute regular expression." "" "regcmp, regex: compile and" "" regcmp(3X)
.xx "compile." "" "regcmp: regular expression" "" regcmp(1)
.xx "" "make: maintain, update, and" "regenerate groups of programs." "" make(1)
.xx "regular expression." "regcmp," "regex: compile and execute" "" regcmp(3X)
.xx "compile and match routines." "" "regexp: regular expression" "" regexp(5)
.xx "match routines." "regexp:" "regular expression compile and" "" regexp(5)
.xx "" "regcmp:" "regular expression compile." "" regcmp(1)
.xx "" "regex: compile and execute" "regular expression." "regcmp," regcmp(3X)
.xx "requests." "accept," "reject: allow/prevent LP" "" accept(1M)
.xx "sorted files." "comm: select or" "reject lines common to two" "" comm(1)
.xx "" "lorder: find ordering" "relation for an object/" "" lorder(1)
.xx "" "join:" "relational database operator." "" join(1)
.xx "for a common object file." "" "reloc: relocation information" "" reloc(4)
.xx "" "ldrseek, ldnrseek: seek to" "relocation entries of a/" "" ldrseek(3X)
.xx "common object file." "reloc:" "relocation information for a" "" reloc(4)
.xx "" "/fmod, fabs: floor, ceiling," "remainder, absolute value/" "" floor(3M)
.xx "" "mod, amod, dmod: FORTRAN" "remaindering intrinsic/" "" mod(3F)
.xx "commands." "mk: how to" "remake the system and" "" mk(8)
.xx "" "calendar:" "reminder service." "" calendar(1)
.xx "" "ct: spawn getty to a" "remote terminal." "" ct(1C)
.xx "file." "rmdel:" "remove a delta from an SCCS" "" rmdel(1)
.xx "semaphore set or/" "ipcrm:" "remove a message queue," "" ipcrm(1)
.xx "" "unlink:" "remove directory entry." "" unlink(2)
.xx "" "rm, rmdir:" "remove files or directories." "" rm(1)
.xx "" "check and interactive" "repair." "/system consistency" fsck(1M)
.xx "" "uniq: report" "repeated lines in a file." "" uniq(1)
.xx "console." "rjestat: RJE status" "report and interactive status" "" rjestat(1C)
.xx "" "clock:" "report CPU time used." "" clock(3C)
.xx "communication/" "ipcs:" "report inter-process" "" ipcs(1)
.xx "blocks." "df:" "report number of free disk" "" df(1M)
.xx "" "errpt: process a" "report of logged errors." "" errpt(1M)
.xx "" "sa2, sadc: system activity" "report package." "sa1," sar(1M)
.xx "" "timex: time a command;" "report process data and system/" "" timex(1)
.xx "" "ps:" "report process status." "" ps(1)
.xx "file." "uniq:" "report repeated lines in a" "" uniq(1)
.xx "" "trenter: enter a trouble" "report." "" trenter(1M)
.xx "" "sar: system activity" "reporter." "" sar(1)
.xx "stream." "fseek, rewind, ftell:" "reposition a file pointer in a" "" fseek(3S)
.xx "" "/lpmove: start/stop the LP" "request scheduler and move/" "" lpsched(1M)
.xx "" "reject: allow/prevent LP" "requests." "accept," accept(1M)
.xx "" "LP request scheduler and move" "requests." "/start/stop the" lpsched(1M)
.xx "" "lp, cancel: send/cancel" "requests to an LP line/" "" lp(1)
.xx "common object file/" "ldgetname:" "retrieve symbol name for" "" ldgetname(3X)
.xx "argument." "getarg:" "return FORTRAN command-line" "" getarg(3F)
.xx "variable." "getenv:" "return FORTRAN environment" "" getenv(3F)
.xx "accounting." "mclock:" "return FORTRAN time" "" mclock(3F)
.xx "" "abs:" "return integer absolute value." "" abs(3C)
.xx "string." "len:" "return length of FORTRAN" "" len(3F)
.xx "substring." "index:" "return location of FORTRAN" "" index(3F)
.xx "" "logname:" "return login name of user." "" logname(3X)
.xx "line arguments." "iargc:" "return the number of command" "" iargc(3F)
.xx "name." "getenv:" "return value for environment" "" getenv(3C)
.xx "" "stat: data" "returned by stat system call." "" stat(5)
.xx "" "col: filter" "reverse line-feeds." "" col(1)
.xx "file pointer in a/" "fseek," "rewind, ftell: reposition a" "" fseek(3S)
.xx "" "creat: create a new file or" "rewrite an existing one." "" creat(2)
.xx "" "gather files and/or submit" "RJE jobs." "send, gath:" send(1C)
.xx "interactive status/" "rjestat:" "RJE status report and" "" rjestat(1C)
.xx "interactive status console." "" "rjestat: RJE status report and" "" rjestat(1C)
.xx "directories." "" "rm, rmdir: remove files or" "" rm(1)
.xx "read mail." "mail," "rmail: send mail to users or" "" mail(1)
.xx "SCCS file." "" "rmdel: remove a delta from an" "" rmdel(1)
.xx "directories." "rm," "rmdir: remove files or" "" rm(1)
.xx "from UNIX/" "/B5toGR: creates" "ROM monitor executable files" "" 5toG(1M)
.xx "" "chroot: change" "root directory." "" chroot(2)
.xx "" "chroot: change" "root directory for a command." "" chroot(1M)
.xx "" "logarithm, power, square" "root functions." "/exponential," exp(3M)
.xx "" "/dsqrt, csqrt: FORTRAN square" "root intrinsic function." "" sqrt(3F)
.xx "" "/tekset, td: graphical device" "routines and filters." "" gdev(1G)
.xx "" "common object file access" "routines." "ldfcn:" ldfcn(4)
.xx "" "expression compile and match" "routines." "regexp: regular" regexp(5)
.xx "" "graphical table of contents" "routines." "toc:" toc(1G)
.xx "standard/restricted/" "sh," "rsh: shell, the" "" sh(1)
.xx "" "and, or, xor, not, lshift," "rshift: FORTRAN bitwise/" "" bool(3F)
.xx "" "nice:" "run a command at low priority." "" nice(1)
.xx "hangups and quits." "nohup:" "run a command immune to" "" nohup(1)
.xx "" "runacct:" "run daily accounting." "" runacct(1M)
.xx "" "" "runacct: run daily accounting." "" runacct(1M)
.xx "" "/prctmp, prdaily, prtacct," "runacct, shutacct, startup,/" "" acctsh(1M)
.xx "activity report package." "" "sa1, sa2, sadc: system" "" sar(1M)
.xx "report package." "sa1," "sa2, sadc: system activity" "" sar(1M)
.xx "editing activity." "" "sact: print current SCCS file" "" sact(1)
.xx "package." "sa1, sa2," "sadc: system activity report" "" sar(1M)
.xx "" "" "sadp: disk access profiler." "" sadp(1M)
