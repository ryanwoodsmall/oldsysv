.TH LDSSEEK 3X "not on PDP-11"
.SH NAME
ldsseek, ldnsseek \- seek to an indexed\/named section of a common object file
.SH SYNOPSIS
.ta \w'unsigned\ 'u +\w'short\ \ 'u
.nf
.ft B
.B #include <stdio.h>
.ie '\*p'' \{\
.B #include <filehdr.h>
.B #include <ldfcn.h> \}
.el \{\
.B #include "\s-1INCDIR\s+1\/filehdr.h"
.B #include "\s-1INCDIR\s+1\/ldfcn.h" \}
.PP
.B int ldsseek (ldptr, sectindx)
.B \s-1LDFILE\s+1 \(**ldptr;
.B unsigned short sectindx;
.PP
.B int ldnsseek (ldptr, sectname)
.B \s-1LDFILE\s+1 \(**ldptr;
.B char \(**sectname;
.DT
.fi
.ft R
.SH DESCRIPTION
.I Ldsseek
seeks to the section specified by
.I sectindx
of the common object file
currently associated with
.IR ldptr .
.PP
.I Ldnsseek
seeks to the section specified by
.IR sectname .
.PP
.I Ldsseek
and
.I ldnsseek
.RB "return " \s-1SUCCESS\s+1 " or " \s-1FAILURE\s+1 .
.I Ldsseek 
will fail if 
.I sectindx
is greater than the number of sections in the object file;
.I ldnsseek
will fail if there is no section name corresponding with
.IR sectname .
Either function will fail if there is
no section data for the specified section or
if it cannot seek to the specified section.
.PP
Note that the first section has an index of
.IR one .
.PP
The program must be loaded with the object file access routine library
.ie '\*p'' \{\
.BR libld.a .
\}
.el \{\
.BR \s-1LIBDIR\s+1\/libld.a .
\}
.if !'\*p'' \{\
.PP
.IR Intro (4)
describes
.BR \s-1INCDIR\s+1  and  \s-1LIBDIR\s+1 .
\}
.SH SEE ALSO
.ie '\*p'' \{\
ldclose(3X), ldopen(3X), ldshread(3X), ldfcn(4).
\}
.el \{\
ldclose(3X), ldopen(3X), ldshread(3X), intro(4), ldfcn(4), paths.h(4).
\}
.\"	@(#)ldsseek.3x	5.2 of 5/18/82
